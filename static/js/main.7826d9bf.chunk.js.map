{"version":3,"sources":["utils/Gun.js","actions/UserActions.js","actions/TipActions.js","utils/Prerender.js","common/Loader/index.js","../node_modules/gun sync","actions/AuthActions.js","common/DownloadBtn/index.js","App.js","reducers/UserReducer.js","reducers/AuthReducer.js","reducers/TipReducer.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["peersConfig","data","JSON","parse","err","safeParse","process","PEERS","peers","wait","ms","Promise","resolve","reject","setTimeout","_randomString","length","randomString","randomChar","n","Math","floor","random","String","fromCharCode","_filterGunProps","key","_isIncompleteGunResponse","console","log","undefined","Array","isArray","reduce","empty","item","stringifiedData","stringify","filteredGunProps","Object","entries","filter","warn","parseGunPath","path","gunPointer","split","gun","get","Gun","GunDB","axe","fetchPath","retryDelay","retryLimit","retryCondition","method","_retryCount","_fallbackResult","parsedRetryLimit","isCrawler","parsedRetryDelay","GunContext","event","a","retryResult","setPath","response","set","listenPath","callback","on","createRandomGunUser","randomAlias","randomPass","user","create","error","field","message","_error","_event","alias","pass","authUser","auth","gunUser","publicKey","Error","$$_SHOCKWALLET__ENCRYPTED__","$$__SHOCKWALLET__MSG__","ACTIONS","LOAD_USER_WALL","LOAD_USER_WALL_TOTAL_PAGES","RESET_USER_WALL","PIN_WALL_POST","UPDATE_WALL_POST","RESET_USER_DATA","LOAD_USER_DATA","LOAD_USER_AVATAR","UPDATE_USER_PROFILE","getUserAvatar","dispatch","avatar","type","getUserHeader","header","fetchUserProfile","includeAvatar","all","bio","displayName","lastSeenApp","lastSeenNode","getUserProfile","getUserPost","id","wallPostKey","contentItemsKey","wallPost","contentItems","filteredContentItems","map","text","magnetURI","width","height","liveStatus","playbackMagnet","viewersCounter","finalType","finalMagnet","fetchedContentItems","getSharedPost","sharedGunPointer","sharedPostKey","sharedPost","date","shareDate","originalAuthor","getUserWall","rawPosts","rawSharedPosts","filteredRawPosts","filteredRawSharedPosts","fetchedPosts","sortedPosts","sort","b","posts","page","getPinnedPost","postId","post","updateUserProfile","updateWallPost","resetUserWall","resetUserData","LOAD_PAYMENT_REQUEST","RESET_PAYMENT_REQUEST","OPEN_TIP_MODAL","CLOSE_TIP_MODAL","UPDATE_METADATA","openModal","metadata","closeModal","payUser","senderPair","recipientPublicKey","amount","me","recipientUser","recipientUserEPub","SEA","secret","sea","orderAddress","encrypt","toString","encryptedAmount","encryptedMemo","order","from","pub","memo","timestamp","Date","now","newOrder","_","slice","newOrderId","encryptedOrder","decrypt","replace","decryptedResponse","decryptedOrder","paymentRequest","ackNode","navigator","userAgent","includes","Loader","className","webpackEmptyContext","req","e","code","keys","module","exports","LOAD_GUN_PAIR","generateGunPair","localStorage","getItem","ePublicKey","randomUser","setItem","newUserEPublicKey","epub","DownloadBtn","href","target","rel","UserPage","React","lazy","PostPage","withRouter","Helmet","property","content","window","location","fallback","component","to","INITIAL_STATE","wall","totalPages","profile","state","action","updatedPost","postID","pinnedPost","pinned","pair","tip","modalOpen","reducers","combineReducers","UserReducer","AuthReducer","TipReducer","store","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","compose","applyMiddleware","thunk","Boolean","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7826d9bf.chunk.js","sourcesContent":["import GunDB from \"gun/gun\";\nimport \"gun/sea\";\nimport \"gun/lib/load\";\nimport { isCrawler } from \"./Prerender\";\n\nconst safeParse = data => {\n  try {\n    return JSON.parse(data);\n  } catch (err) {\n    return null;\n  }\n};\n\nconst peersConfig = safeParse(process.env.PEERS);\n\nconst peers = peersConfig\n  ? peersConfig\n  : [\"https://gun.shock.network/gun\", \"https://gun-eu.shock.network/gun\"];\n\nconst wait = ms =>\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(true);\n    }, ms);\n  });\n\nconst _randomString = length => {\n  let randomString = \"\";\n  const randomChar = function () {\n    const n = Math.floor(Math.random() * 62);\n    if (n < 10) return n; //1-10\n    if (n < 36) return String.fromCharCode(n + 55); //A-Z\n    return String.fromCharCode(n + 61); //a-z\n  };\n  while (randomString.length < length) randomString += randomChar();\n  return randomString;\n};\n\nconst _filterGunProps = ([key, item]) => item && key !== \"_\" && key !== \"#\";\n\nconst _isIncompleteGunResponse = data => {\n  try {\n    console.log(\"Incomplete Gun Response Check:\", typeof data, data);\n    if (data === null || data === undefined) {\n      return true;\n    }\n\n    if (Array.isArray(data)) {\n      if (!data.length) {\n        return true;\n      }\n\n      const incompleteCollection = data.reduce((empty, item) => {\n        if (empty) {\n          return empty;\n        }\n\n        return _isIncompleteGunResponse(item);\n      });\n\n      return incompleteCollection;\n    }\n\n    if (typeof data === \"object\") {\n      if (!data || typeof data.err === \"number\") {\n        return true;\n      }\n\n      const stringifiedData = JSON.stringify(data);\n      console.log(data, stringifiedData);\n\n      if (stringifiedData === \"{}\") {\n        return true;\n      }\n\n      const filteredGunProps = Object.entries(data).filter(_filterGunProps);\n\n      console.log(filteredGunProps, filteredGunProps?.length);\n\n      if (!filteredGunProps?.length) {\n        return true;\n      }\n    }\n\n    return false;\n  } catch (err) {\n    console.warn(\"An error has occurred:\", err);\n    return true;\n  }\n};\n\nconst parseGunPath = ({ path, gunPointer }) =>\n  path.split(\"/\").reduce((gun, path) => gun.get(path), gunPointer);\n\nexport const Gun = GunDB({ axe: false, peers: peers });\n\nexport const fetchPath = ({\n  path = \"\",\n  retryDelay = 500,\n  retryLimit = 3,\n  retryCondition = _isIncompleteGunResponse,\n  gunPointer = Gun,\n  method = \"once\",\n\n  _retryCount = 0,\n  _fallbackResult\n}) =>\n  new Promise(resolve => {\n    const parsedRetryLimit = isCrawler() ? 1 : retryLimit;\n    const parsedRetryDelay = isCrawler() ? 200 : retryDelay;\n\n    if (_retryCount > parsedRetryLimit) {\n      resolve(_fallbackResult);\n      return;\n    }\n    if (_retryCount > 0) {\n      console.log(\n        \"Retrying event:\",\n        path,\n        `${_retryCount}/${parsedRetryLimit}`\n      );\n    }\n    const GunContext = parseGunPath({ path, gunPointer });\n    console.log(\"Fetching Path:\", path);\n    GunContext[method](async event => {\n      console.log(path + \" Response:\", event);\n      if (retryCondition && retryCondition(event)) {\n        await wait(parsedRetryDelay);\n        const retryResult = await fetchPath({\n          path,\n          retryDelay: parsedRetryDelay,\n          retryLimit: parsedRetryLimit,\n          retryCondition,\n          gunPointer,\n\n          _retryCount: _retryCount + 1,\n          _fallbackResult: event\n        });\n        resolve(retryResult);\n        return;\n      }\n\n      resolve(event);\n    });\n  });\n\n// Wraps GunDB data callbacks to provide better error handling\nexport const wrap = callback => event => {\n  console.log(\"Event received!\", event);\n  if (event?.err) {\n    console.error(\"[GunDB] Event error:\", event?.err, event);\n  }\n\n  if (!event?.put) {\n    console.warn(\"[GunDB] Item not found:\", event?.put, event);\n  }\n\n  return callback(\n    event,\n    event.err || !event.put\n      ? {\n          field: !event.put ? \"key\" : \"unknown\",\n          message: event.err\n            ? event.err\n            : !event.put\n            ? \"Key not found\"\n            : \"Unknown\",\n          gunErr: event.err\n        }\n      : null\n  );\n};\n\nexport const putPath = ({ path = \"\", data = {}, gunPointer = Gun }) =>\n  new Promise((resolve, reject) => {\n    const GunContext = parseGunPath({ path, gunPointer });\n    GunContext.put(\n      data,\n      wrap((event, err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(event);\n      })\n    );\n  });\n\nexport const setPath = ({ path = \"\", data = {}, gunPointer = Gun }) =>\n  new Promise((resolve, reject) => {\n    const GunContext = parseGunPath({ path, gunPointer });\n    const response = GunContext.set(data, event => {\n      console.log(data);\n      resolve(response);\n    });\n  });\n\nexport const listenPath = ({ path = \"\", gunPointer = Gun, callback }) => {\n  const GunContext = parseGunPath({ path, gunPointer });\n  return GunContext.on(event => {\n    callback(event);\n  });\n};\n\nexport const createRandomGunUser = () =>\n  new Promise((resolve, reject) => {\n    const randomAlias = _randomString(10);\n    const randomPass = _randomString(10);\n    Gun.user().create(randomAlias, randomPass, event => {\n      if (event.err) {\n        console.error(\"An error has occurred while initializing a new user\");\n        reject({\n          field: \"gundb\",\n          message: \"An error has occurred while initializing a new user\",\n          _error: event.err,\n          _event: event\n        });\n        return;\n      }\n      resolve({ ...event, alias: randomAlias, pass: randomPass });\n    });\n  });\n\nexport const authUser = (alias, pass) =>\n  new Promise((resolve, reject) => {\n    Gun.user().auth(alias, pass, user => {\n      resolve(user);\n    });\n  });\n\nexport const gunUser = publicKey => {\n  console.log(\"Getting Gun User:\", publicKey);\n  if (!publicKey) {\n    throw new Error(\"Undefined public key\");\n  }\n  return Gun.user(publicKey);\n};\n\n// Magic number provided from GunDB docs\nexport const DEFAULT_ONCE_WAIT_MS = 99;\n\nexport const $$_SHOCKWALLET__ENCRYPTED__ = \"$$_SHOCKWALLET__ENCRYPTED__\";\n\nexport const $$__SHOCKWALLET__MSG__ = \"$$__SHOCKWALLET__MSG__\";\n","import { Gun, fetchPath } from \"../utils/Gun\";\n\nexport const ACTIONS = {\n  LOAD_USER_WALL: \"wall/load\",\n  LOAD_USER_WALL_TOTAL_PAGES: \"wall/loadTotalPages\",\n  RESET_USER_WALL: \"wall/reset\",\n  PIN_WALL_POST: \"wall/pin\",\n  UPDATE_WALL_POST: \"wall/post/update\",\n  RESET_USER_DATA: \"user/reset\",\n  LOAD_USER_DATA: \"user/load\",\n  LOAD_USER_AVATAR: \"avatar/load\",\n  UPDATE_USER_PROFILE: \"user/update\",\n};\n\nconst _filterGunProps = ([key, item]) => item && key !== \"_\" && key !== \"#\";\n\nconst GUN_POSTS_KEY = `posts`;\nconst GUN_SHARED_POSTS_KEY = `sharedPosts`;\n\nexport const getUserAvatar = (publicKey) => async (dispatch) => {\n  const gunUser = Gun.user(publicKey);\n  const avatar = await fetchPath({\n    path: \"profileBinary/avatar\",\n    gunPointer: gunUser,\n  });\n\n  dispatch({\n    type: ACTIONS.UPDATE_USER_PROFILE,\n    data: { avatar },\n  });\n\n  return avatar;\n};\n\nexport const getUserHeader = (publicKey) => async (dispatch) => {\n  const gunUser = Gun.user(publicKey);\n  const header = await fetchPath({\n    path: \"profileBinary/header\",\n    gunPointer: gunUser,\n  });\n\n  dispatch({\n    type: ACTIONS.UPDATE_USER_PROFILE,\n    data: { header },\n  });\n\n  return header;\n};\n\nexport const fetchUserProfile = async ({\n  publicKey,\n  includeAvatar = false,\n}) => {\n  const gunUser = Gun.user(publicKey);\n  const [bio, displayName, alias, lastSeenApp, lastSeenNode, avatar] =\n    await Promise.all([\n      fetchPath({\n        path: \"Profile/bio\",\n        gunPointer: gunUser,\n      }),\n      fetchPath({\n        path: \"Profile/displayName\",\n        gunPointer: gunUser,\n      }),\n      fetchPath({\n        path: \"alias\",\n        gunPointer: gunUser,\n      }),\n      fetchPath({\n        path: \"Profile/lastSeenApp\",\n        gunPointer: gunUser,\n      }),\n      fetchPath({\n        path: \"Profile/lastSeenNode\",\n        gunPointer: gunUser,\n      }),\n      includeAvatar\n        ? fetchPath({\n            path: \"profileBinary/avatar\",\n            gunPointer: gunUser,\n          })\n        : undefined,\n    ]);\n\n  const user = {\n    publicKey,\n    bio,\n    displayName,\n    alias,\n    lastSeenNode,\n    lastSeenApp,\n    avatar,\n  };\n\n  return user;\n};\n\nexport const getUserProfile = (publicKey) => async (dispatch) => {\n  const user = await fetchUserProfile({ publicKey });\n\n  console.log(\"User:\", user);\n\n  dispatch({\n    type: ACTIONS.LOAD_USER_DATA,\n    data: user,\n  });\n\n  return user;\n};\n\nexport const getWallTotalPages = (publicKey) => async (dispatch) => {\n  const totalPages = await fetchPath({\n    path: \"wall/numOfPages\",\n    gunPointer: Gun.user(publicKey),\n  });\n\n  if (!totalPages && totalPages !== 0) {\n    throw {\n      field: \"publicKey\",\n      message: \"Wall was not found for the specified user\",\n    };\n  }\n\n  dispatch({\n    type: ACTIONS.LOAD_USER_WALL_TOTAL_PAGES,\n    data: totalPages,\n  });\n\n  return totalPages;\n};\n\nexport const getUserPost = async ({ id, gunPointer }) => {\n  const wallPostKey = `${GUN_POSTS_KEY}/${id}`;\n  const contentItemsKey = `${wallPostKey}/contentItems`;\n\n  const wallPost = await fetchPath({\n    path: wallPostKey,\n    gunPointer,\n    retryLimit: 5,\n    retryDelay: 1000,\n  });\n  const contentItems = await fetchPath({\n    path: contentItemsKey,\n    gunPointer,\n    retryLimit: 5,\n    retryDelay: 500,\n  });\n  const filteredContentItems =\n    Object.entries(contentItems).filter(_filterGunProps);\n  const fetchedContentItems = await Promise.all(\n    filteredContentItems.map(async ([id]) => {\n      const type = await fetchPath({\n        path: `${contentItemsKey}/${id}/type`,\n        gunPointer,\n      });\n\n      if (type === \"text/paragraph\") {\n        const text = await fetchPath({\n          path: `${contentItemsKey}/${id}/text`,\n          gunPointer,\n        });\n        return {\n          text,\n          type,\n        };\n      }\n\n      if (type === \"video/embedded\") {\n        const [magnetURI, width, height] = await Promise.all([\n          fetchPath({\n            path: `${contentItemsKey}/${id}/magnetURI`,\n            gunPointer,\n          }),\n          fetchPath({\n            path: `${contentItemsKey}/${id}/width`,\n            gunPointer,\n          }),\n          fetchPath({\n            path: `${contentItemsKey}/${id}/height`,\n            gunPointer,\n          }),\n        ]);\n        return {\n          magnetURI,\n          width,\n          height,\n          type,\n        };\n      }\n\n      if (type === \"image/embedded\") {\n        const [magnetURI, width, height] = await Promise.all([\n          fetchPath({\n            path: `${contentItemsKey}/${id}/magnetURI`,\n            gunPointer,\n          }),\n          fetchPath({\n            path: `${contentItemsKey}/${id}/width`,\n            gunPointer,\n          }),\n          fetchPath({\n            path: `${contentItemsKey}/${id}/height`,\n            gunPointer,\n          }),\n        ]);\n        return {\n          magnetURI,\n          width,\n          height,\n          type,\n        };\n      }\n      if (type === \"stream/embedded\") {\n        const magnetURI = await fetchPath({\n          path: `${contentItemsKey}/${id}/magnetURI`,\n          gunPointer,\n        });\n        const liveStatus = await fetchPath({\n          path: `${contentItemsKey}/${id}/liveStatus`,\n          gunPointer,\n        });\n        const playbackMagnet = await fetchPath({\n          path: `${contentItemsKey}/${id}/playbackMagnet`,\n          gunPointer,\n        });\n        const viewersCounter = await fetchPath({\n          path: `${contentItemsKey}/${id}/viewersCounter`,\n          gunPointer,\n          retryLimit: 1,\n        });\n        let finalType = type;\n        let finalMagnet = magnetURI;\n        if (liveStatus === \"wasLive\" && playbackMagnet) {\n          finalMagnet = playbackMagnet;\n          finalType = \"video/embedded\";\n        }\n        return {\n          magnetURI: finalMagnet,\n          width: 0,\n          height: 0,\n          type: finalType,\n          liveStatus,\n          playbackMagnet,\n          viewersCounter,\n        };\n      }\n\n      return {\n        text: \"Unsupported media type\",\n        type,\n      };\n    })\n  );\n\n  return {\n    ...(wallPost ?? {}),\n    id,\n    contentItems: fetchedContentItems ?? [],\n    type: \"post\",\n  };\n};\n\nexport const getSharedPost = async ({ id, sharedGunPointer }) => {\n  const sharedPostKey = `${GUN_SHARED_POSTS_KEY}/${id}`;\n\n  const sharedPost = await fetchPath({\n    path: sharedPostKey,\n    gunPointer: sharedGunPointer,\n    retryLimit: 5,\n    retryDelay: 1000,\n  });\n\n  return {\n    id,\n    date: sharedPost.shareDate,\n    originalAuthor: sharedPost.originalAuthor,\n    type: \"shared\",\n  };\n};\n\nexport const getUserWall = (publicKey) => async (dispatch) => {\n  try {\n    const gunPointer = Gun.user(publicKey);\n    const [rawPosts, rawSharedPosts] = await Promise.all([\n      fetchPath({\n        path: GUN_POSTS_KEY,\n        gunPointer,\n        retryLimit: 5,\n        retryDelay: 1000,\n      }),\n      fetchPath({\n        path: GUN_SHARED_POSTS_KEY,\n        gunPointer,\n      }),\n    ]);\n    console.log(\"Posts:\", rawPosts);\n    console.log(\"Shared Posts:\", rawSharedPosts);\n    const filteredRawPosts = Object.entries(rawPosts ?? {}).filter(\n      _filterGunProps\n    );\n    const filteredRawSharedPosts = Object.entries(rawSharedPosts ?? {}).filter(\n      _filterGunProps\n    );\n    const fetchedPosts = await Promise.all([\n      ...filteredRawPosts.map(([id], key) => getUserPost({ id, gunPointer })),\n      ...filteredRawSharedPosts.map(([id], key) =>\n        getSharedPost({\n          id,\n          sharedGunPointer: gunPointer,\n        })\n      ),\n    ]);\n\n    console.log(`User wall`, fetchedPosts);\n\n    const sortedPosts = fetchedPosts.sort((a, b) => b.date - a.date);\n\n    dispatch({\n      type: ACTIONS.LOAD_USER_WALL,\n      data: { posts: sortedPosts, page: 0 },\n    });\n\n    return fetchedPosts;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getPinnedPost =\n  ({ publicKey, postId, type = \"post\" }) =>\n  async (dispatch) => {\n    console.log(\"Getting Pinned post:\", publicKey, postId, type);\n\n    if (!publicKey || !postId) {\n      return;\n    }\n\n    const gunPointer = Gun.user(publicKey);\n\n    if (type === \"post\") {\n      const post = await getUserPost({ id: postId, gunPointer });\n\n      if (post) {\n        dispatch({\n          type: ACTIONS.PIN_WALL_POST,\n          data: post,\n        });\n      }\n\n      return post;\n    }\n\n    if (type === \"sharedPost\") {\n      const post = await getSharedPost({\n        id: postId,\n        sharedGunPointer: gunPointer,\n      });\n\n      if (post) {\n        dispatch({\n          type: ACTIONS.PIN_WALL_POST,\n          data: post,\n        });\n      }\n\n      return post;\n    }\n  };\n\nexport const updateUserProfile = (data) => (dispatch) => {\n  dispatch({\n    type: ACTIONS.UPDATE_USER_PROFILE,\n    data,\n  });\n};\n\nexport const updateWallPost = (data) => (dispatch) => {\n  dispatch({\n    type: ACTIONS.UPDATE_WALL_POST,\n    data,\n  });\n};\n\nexport const resetUserWall = () => (dispatch) => {\n  dispatch({\n    type: ACTIONS.RESET_USER_WALL,\n  });\n};\n\nexport const resetUserData = () => (dispatch) => {\n  dispatch({\n    type: ACTIONS.RESET_USER_DATA,\n  });\n};\n","import SEA from \"gun/sea\";\nimport {\n  Gun,\n  fetchPath,\n  setPath,\n  authUser,\n  $$__SHOCKWALLET__MSG__,\n  $$_SHOCKWALLET__ENCRYPTED__\n} from \"../utils/Gun\";\n\nexport const ACTIONS = {\n  LOAD_PAYMENT_REQUEST: \"tip/paymentRequest/load\",\n  RESET_PAYMENT_REQUEST: \"tip/paymentRequest/reset\",\n  OPEN_TIP_MODAL: \"tip/modal/open\",\n  CLOSE_TIP_MODAL: \"tip/modal/close\",\n  UPDATE_METADATA: \"tip/metadata/update\"\n};\n\nexport const openModal = metadata => ({\n  type: ACTIONS.OPEN_TIP_MODAL,\n  data: metadata\n});\n\nexport const closeModal = () => ({\n  type: ACTIONS.CLOSE_TIP_MODAL\n});\n\nexport const updateMetadata = metadata => ({\n  type: ACTIONS.UPDATE_METADATA,\n  data: metadata\n});\n\nexport const payUser =\n  ({ senderPair, recipientPublicKey, amount, metadata }) =>\n  async dispatch => {\n    const me = await authUser(senderPair.alias, senderPair.pass);\n    const recipientUser = Gun.user(recipientPublicKey);\n    const recipientUserEPub = await fetchPath({\n      path: \"epub\",\n      gunPointer: recipientUser\n    });\n\n    const secret = await SEA.secret(recipientUserEPub, me.sea);\n\n    const orderAddress = await fetchPath({\n      path: \"currentOrderAddress\",\n      gunPointer: recipientUser\n    });\n\n    console.log(\"Order Address:\", orderAddress);\n\n    const [encryptedAmount, encryptedMemo] = await Promise.all([\n      SEA.encrypt($$__SHOCKWALLET__MSG__ + amount.toString(), secret),\n      SEA.encrypt($$__SHOCKWALLET__MSG__ + \"Tipped user!\", secret)\n    ]);\n\n    const order = {\n      amount: $$_SHOCKWALLET__ENCRYPTED__ + encryptedAmount,\n      from: me.sea.pub,\n      memo: $$_SHOCKWALLET__ENCRYPTED__ + encryptedMemo,\n      timestamp: Date.now(),\n      // Tip type\n      ...metadata\n    };\n\n    console.log(\"Order:\", order);\n\n    const newOrder = await setPath({\n      path: `orderNodes/${orderAddress}`,\n      data: order\n    });\n    console.log(\n      \"New Order:\",\n      newOrder,\n      newOrder._[\"#\"].split(\"/\").slice(-1)[0]\n    );\n\n    const newOrderId = newOrder._[\"#\"].split(\"/\").slice(-1)[0];\n\n    console.log(\"New Order ID:\", newOrderId, `orderToResponse/${newOrderId}`);\n\n    await fetchPath({\n      path: `orderToResponse/${newOrderId}`,\n      gunPointer: Gun.user(recipientPublicKey),\n      method: \"on\"\n    });\n    const encryptedOrder = await fetchPath({\n      path: `orderToResponse/${newOrderId}`,\n      gunPointer: Gun.user(recipientPublicKey)\n    });\n\n    console.log(\n      \"Encrypted Order:\",\n      encryptedOrder.response,\n      encryptedOrder.response?.toString()\n    );\n\n    const decryptedResponse = await SEA.decrypt(\n      encryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\"),\n      secret\n    );\n\n    const decryptedOrder = {\n      response: decryptedResponse?.replace?.($$__SHOCKWALLET__MSG__, \"\"),\n      type: encryptedOrder.type\n    };\n\n    console.log(\"[ORDER] Decrypted order:\", decryptedOrder);\n\n    if (decryptedOrder.type === \"err\") {\n      throw {\n        field: \"order\",\n        message: \"An error has occurred while retrieving the order\",\n        data: decryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\")\n      };\n    }\n\n    dispatch({\n      type: ACTIONS.LOAD_PAYMENT_REQUEST,\n      data: decryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\")\n    });\n\n    return {paymentRequest:decryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\"), ackNode:encryptedOrder.ackNode};\n  };\n\nexport const resetPaymentRequest = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_PAYMENT_REQUEST\n  });\n};\n","export const isCrawler = () => navigator.userAgent.includes(\"Prerender\");\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst Loader = ({ text = \"Loading...\" }) => (\n  <div className=\"loading-wall\">\n    <div className=\"loading-wall-icon\">\n      <span className=\"loading-circle loading-circle-1\"></span>\n      <span className=\"loading-circle loading-circle-2\"></span>\n      <span className=\"loading-circle loading-circle-3\"></span>\n      <span className=\"loading-circle loading-circle-4\"></span>\n      <span className=\"loading-circle loading-circle-5\"></span>\n    </div>\n    <div className=\"loading-wall-text\">{text}</div>\n  </div>\n);\n\nexport default Loader;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 38;","import { Gun, createRandomGunUser, fetchPath } from \"../utils/Gun\";\n\nexport const ACTIONS = {\n  LOAD_GUN_PAIR: \"auth/loadPair\"\n};\n\nexport const generateGunPair = () => async dispatch => {\n  const alias = localStorage.getItem(\"shocknet/gun/alias\");\n  const pass = localStorage.getItem(\"shocknet/gun/pass\");\n  const publicKey = localStorage.getItem(\"shocknet/gun/pub\");\n  const ePublicKey = localStorage.getItem(\"shocknet/gun/epub\");\n\n  if (!alias || !pass) {\n    console.log(\"[Gun] Keypair not found, generating a new one...\");\n\n    const randomUser = await createRandomGunUser();\n    localStorage.setItem(\"shocknet/gun/alias\", randomUser.alias);\n    localStorage.setItem(\"shocknet/gun/pass\", randomUser.pass);\n    localStorage.setItem(\"shocknet/gun/pub\", randomUser.pub);\n\n    const gunPointer = Gun.user(randomUser.pub);\n    const newUserEPublicKey = await fetchPath({\n      path: \"epub\",\n      gunPointer\n    });\n    localStorage.setItem(\"shocknet/gun/epub\", newUserEPublicKey);\n    dispatch({\n      type: ACTIONS.LOAD_GUN_PAIR,\n      data: randomUser\n    });\n    return;\n  }\n\n  console.log(\"[Gun] Keypair exists!\");\n\n  const user = {\n    pub: publicKey,\n    alias: alias,\n    epub: ePublicKey,\n    pass: pass\n  };\n\n  console.log(\"[Gun] User Authenticated\");\n\n  dispatch({\n    type: ACTIONS.LOAD_GUN_PAIR,\n    data: user\n  });\n\n  return user;\n};\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst DownloadBtn = () => {\n  return (\n    <a\n      href=\"https://My.Lightning.Page\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      className=\"download-shockwallet-btn\"\n    >\n      <i className=\"download-shockwallet-btn-icon fas fa-user\"></i>\n      <p className=\"download-shockwallet-btn-text\">Create a Lightning Page</p>\n    </a>\n  );\n};\n\nexport default DownloadBtn;\n","import React, { Suspense } from \"react\";\nimport { withRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Loader from \"./common/Loader\";\nimport DownloadBtn from \"./common/DownloadBtn\";\nimport \"./styles/App.css\";\nimport { Helmet } from \"react-helmet\";\n\nconst UserPage = React.lazy(() => import(\"./pages/User\"));\nconst PostPage = React.lazy(() => import(\"./pages/Post\"));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta property=\"twitter:site\" content=\"@shocknet\" />\n        <meta property=\"twitter:card\" content=\"summary\" />\n        <meta property=\"og:url\" content={window.location.href} />\n        <meta property=\"og:type\" content=\"website\" />\n      </Helmet>\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <Route path=\"/user/:userId\" component={UserPage} />\n          <Route path=\"/:userId/:type/:postId\" component={PostPage} />\n          <Route path=\"/:userId\" component={UserPage} />\n          <Redirect to=\"/tcUUzRkyzXYhIZQbmopiCLREyZ_kQJqQ-C4XesecOm4.GX1Dv-eGcfKuOPobBK9Q-Sc-o697XgVCQzOCfqfimIo\" />\n        </Switch>\n      </Suspense>\n      <DownloadBtn />\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","import { ACTIONS } from \"../actions/UserActions\";\n\nconst INITIAL_STATE = {\n  wall: {\n    posts: [],\n    // Specifying -1 is helpful for determining whether or not\n    // the wall was loaded at all\n    page: -1,\n    totalPages: 0\n  },\n  profile: {}\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_USER_WALL: {\n      const { data } = action;\n      return {\n        ...state,\n        wall: {\n          ...state.wall,\n          posts: [...state.wall.posts, ...data.posts],\n          page: data.page\n        }\n      };\n    }\n    case ACTIONS.LOAD_USER_WALL_TOTAL_PAGES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        wall: {\n          ...state.wall,\n          totalPages: data\n        }\n      };\n    }\n    case ACTIONS.LOAD_USER_DATA: {\n      const { data } = action;\n      return {\n        ...state,\n        profile: data\n      };\n    }\n    case ACTIONS.LOAD_USER_AVATAR: {\n      const { data } = action;\n      return {\n        ...state,\n        profile: {\n          ...state.profile,\n          avatar: data\n        }\n      };\n    }\n    case ACTIONS.UPDATE_USER_PROFILE: {\n      const { data } = action;\n      return {\n        ...state,\n        profile: {\n          ...state.profile,\n          ...data\n        }\n      };\n    }\n    case ACTIONS.UPDATE_WALL_POST: {\n      const { data: updatedPost } = action;\n      return {\n        ...state,\n        wall: {\n          ...state.wall,\n          posts: state.wall.posts.map(post =>\n            updatedPost.postID === post.id\n              ? {\n                  ...post,\n                  ...updatedPost.data\n                }\n              : post\n          )\n        }\n      };\n    }\n    case ACTIONS.PIN_WALL_POST: {\n      const { data } = action;\n      return {\n        ...state,\n        wall: {\n          ...state.wall,\n          pinnedPost: { ...data, pinned: true }\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_WALL: {\n      return { ...state, wall: INITIAL_STATE.wall };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  pair: {}\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_GUN_PAIR: {\n      const { data } = action;\n      return {\n        ...state,\n        pair: data\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","import { ACTIONS } from \"../actions/TipActions\";\n\nconst INITIAL_STATE = {\n  paymentRequest: null\n};\n\nconst tip = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_PAYMENT_REQUEST: {\n      const { data } = action;\n      return {\n        ...state,\n        paymentRequest: data\n      };\n    }\n    case ACTIONS.RESET_PAYMENT_REQUEST: {\n      return {\n        ...state,\n        paymentRequest: null\n      };\n    }\n    case ACTIONS.OPEN_TIP_MODAL: {\n      const { data } = action;\n\n      return {\n        ...state,\n        modalOpen: true,\n        metadata: data\n      };\n    }\n    case ACTIONS.CLOSE_TIP_MODAL: {\n      return {\n        ...state,\n        modalOpen: false,\n        metadata: {}\n      };\n    }\n    case ACTIONS.UPDATE_METADATA: {\n      const { data } = action;\n\n      return {\n        ...state,\n        metadata: data\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tip;\n","import { combineReducers } from \"redux\";\nimport UserReducer from \"./UserReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport TipReducer from \"./TipReducer\";\n\nconst reducers = combineReducers({\n  user: UserReducer,\n  auth: AuthReducer,\n  tip: TipReducer\n});\n\nexport default reducers;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst store = window.__REDUX_DEVTOOLS_EXTENSION__\n  ? createStore(\n      rootReducer,\n      compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__())\n    )\n  : createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Router basename=\"/\">\n        <App />\n      </Router>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}