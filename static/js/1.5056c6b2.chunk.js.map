{"version":3,"sources":["utils/Cache.js","utils/Torrents.js","common/Post/components/TipRibbon.js","common/Post/components/Video.js","common/Post/components/Stream.js","common/Post/components/Image.js","common/Post/components/Media/index.js","utils/Post.js","common/Post/components/ShareBtn.js","common/Post/index.js"],"names":["getCachedFile","fileName","a","FileCache","_init","Promise","resolve","reject","init","then","console","log","persist","status","persistent","load","cachedFile","createURL","warn","renderCachedFile","fileURL","selector","elements","document","querySelectorAll","length","forEach","element","src","muted","saveFile","buffer","save","supportedFileTypes","formats","options","autoplay","supportedFormats","Object","values","reduce","fileType","_getFileType","file","extension","name","split","slice","entries","filter","includes","supportedFileType","webTorrentClient","initializeClient","WebTorrent","default","showDynamicThumbnail","thumbnailFile","item","thumbnailFileType","thumbnailTarget","magnetURI","dynamicThumbnailTarget","querySelector","classList","add","remove","getCacheId","id","key","renderTorrent","type","torrentMode","torrent","target","torrentElements","torrentElement","contains","contentURL","decodeURIComponent","replace","format","toLowerCase","endsWith","compatibleURL","setAttribute","renderTo","getThumbnailRenderer","thumbnailFileNames","getCacheFileName","thumbnails","sanitizedName","join","thumbnailName","thumbnailIndex","indexOf","cachedThumbnail","attachMedia","posts","all","map","post","contentItems","supportedItems","get","files","match","renderThumbnail","destroy","on","getBlob","err","blob","dataset","played","getAttribute","torrentTasks","torrents","runSerial","TipRibbon","tipCounter","tipValue","zoomed","className","style","opacity","Video","index","videoRef","useRef","useState","playing","setPlaying","observe","useInView","trackVisibility","delay","onEnter","current","play","onLeave","pause","togglePlayingStatus","useCallback","updatedPlaying","videoHeight","useMemo","CSS","supports","aspectRatio","height","onPause","readyState","ref","width","cursor","classNames","onClick","data-torrent","data-file-key","alt","data-played","controls","autoPlay","Stream","hideRibbon","playerDOM","unobserveOnEnter","videoStyle","liveStatus","useEffect","player","videojs","viewersSocketUrl","socket","WebSocket","userToken","addEventListener","close","display","preload","Image","postId","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","value","clearTimeout","timer","setTimeout","Controlled","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","onLoad","MediaCarousel","timestamp","avatar","useEmblaCarousel","slidesToScroll","align","draggable","carouselRef","carouselAPI","sliderLength","setSliderLength","activeSlide","setActiveSlide","nextSlide","canScrollNext","scrollNext","prevSlide","canScrollPrev","scrollPrev","handleUserKeyDown","e","updateActiveSlide","selectedScrollSnap","parseContent","text","window","removeEventListener","off","scrollSnapList","Array","from","_","scrollTo","getPostDescription","username","getMediaMetadata","url","sanitizedUrl","thumbnail","ShareBtn","publicKey","pinned","copiedLink","setCopiedLink","media","description","link","location","host","metadata","title","metadataBase64","btoa","unescape","encodeURIComponent","JSON","stringify","sharePost","navigator","share","onCopy","getShareMessage","ReactTooltip","rebuild","timeout","tooltipId","data-tip","data-for","effect","backgroundColor","getContent","STATIC_THUMBNAIL","origin","Post","isOnlineNode","dispatch","useDispatch","setLiveStatus","viewersCounter","setViewersCounter","mediaContent","mediaMetadata","textContent","getMediaType","mediaItem","tipPost","openModal","targetType","ackInfo","fetchPath","path","gunPointer","gunUser","method","data","tipSet","lenSet","tot","acc","val","Number","updateWallPost","postID","videoContent","find","streamContent","Tooltip","useLayoutEffect","prerenderReady","Helmet","property","content","Fragment","to","backgroundImage","moment","utc","fromNow","Media"],"mappings":"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","file":"static/js/1.5056c6b2.chunk.js","sourcesContent":["import FileCache from \"browser-file-storage\";\n\nexport const DB_NAME = \"ShockWalletStore\";\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    FileCache.init(DB_NAME)\n      .then(() => {\n        console.log(\"File cache initialized!\");\n        return FileCache.persist();\n      })\n      .then(status => {\n        if (status.persistent) {\n          resolve(status);\n        } else {\n          reject(status);\n        }\n      });\n  });\n\nexport const getCachedFile = async fileName => {\n  try {\n    if (!FileCache._init) {\n      await init();\n    }\n\n    const cachedFile = await FileCache.load(fileName);\n    return cachedFile.createURL();\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n};\n\nexport const renderCachedFile = (fileURL, selector) => {\n  const elements = document.querySelectorAll(selector);\n  if (elements && elements.length) {\n    elements.forEach(element => {\n      element.src = fileURL;\n      element.muted = true;\n    });\n  }\n  return !!elements && !!elements.length;\n};\n\nexport const saveFile = (fileName, buffer) => {\n  return FileCache.save(fileName, buffer);\n};\n","import { getCachedFile, renderCachedFile, saveFile } from \"./Cache\";\nimport { runSerial } from \"./Promise\";\n\nexport const supportedFileTypes = {\n  \"video/embedded\": {\n    formats: [\"mp4\", \"webm\"],\n    element: \"video\",\n    options: {\n      autoplay: false,\n      muted: true\n    }\n  },\n  \"image/embedded\": {\n    formats: [\"jpg\", \"png\", \"webp\", \"jpeg\"],\n    element: \"img\",\n    options: {}\n  }\n};\n\nexport const supportedFormats = Object.values(supportedFileTypes).reduce(\n  (supportedFormats, fileType) => [...supportedFormats, ...fileType.formats],\n  []\n);\n\nconst _getFileType = file => {\n  if (!file) {\n    return null;\n  }\n\n  const extension = file.name?.split(\".\")?.slice(-1)[0];\n  const [supportedFileType] = Object.entries(supportedFileTypes).filter(\n    ([type, options]) => options.formats.includes(extension)\n  );\n\n  if (supportedFileType) {\n    const [name, fileType] = supportedFileType;\n    return {\n      name,\n      ...fileType\n    };\n  }\n\n  return null;\n};\n\nexport let webTorrentClient = null;\n\nexport const initializeClient = async () => {\n  if (!webTorrentClient) {\n    const WebTorrent = await import(\"webtorrent\");\n    webTorrentClient = new WebTorrent.default();\n  }\n\n  return webTorrentClient;\n};\n\nconst showDynamicThumbnail = ({ thumbnailFile, fileType, item }) => {\n  const thumbnailFileType = _getFileType(thumbnailFile);\n  const thumbnailTarget = `${\n    thumbnailFileType?.element ?? \"img\"\n  }[data-torrent=\"${item.magnetURI}\"]`;\n  const dynamicThumbnailTarget = `.dynamic-thumbnail[data-torrent=\"${item.magnetURI}\"]`;\n\n  if (!thumbnailFile && fileType.element === \"video\") {\n    document.querySelector(thumbnailTarget).classList.add(\"hidden\");\n    document.querySelector(dynamicThumbnailTarget).classList.remove(\"hidden\");\n  }\n};\n\nconst getCacheId =\n  ({ id, key }) =>\n  file =>\n    `${id}-${key}-${file.name}`;\n\nconst renderTorrent = ({ file, type, torrentMode, torrent }) => {\n  const element = type.element;\n  const target = `${element}[data-torrent=\"${torrent.magnetURI}\"]`;\n  const torrentElements = document.querySelectorAll(target);\n  console.log(\"Torrent Elements:\", torrentElements);\n  torrentElements.forEach(torrentElement => {\n    // Don't render hidden videos\n    if (torrentElement.classList.contains(\"hidden\")) {\n      return;\n    }\n    const contentURL = decodeURIComponent(\n      torrent.magnetURI.replace(/.*(ws=)/gi, \"\")\n    );\n    const [compatibleURL] = type.formats.filter(format =>\n      contentURL.toLowerCase().endsWith(`.${format.toLowerCase()}`)\n    );\n\n    if (torrentMode || !compatibleURL) {\n      file.renderTo(torrentElement, type.options);\n      return;\n    }\n\n    torrentElement.setAttribute(\"src\", contentURL);\n  });\n};\n\nconst getThumbnailRenderer =\n  ({ thumbnailFileNames, getCacheFileName, torrentMode }) =>\n  async ({ fileName, thumbnails, item, fileType }) => {\n    const sanitizedName = fileName.split(\".\").slice(0, -1).join(\".\");\n    const thumbnailName = `${sanitizedName}-thumb`;\n    const thumbnailIndex = thumbnailFileNames.indexOf(thumbnailName);\n    const thumbnailFile = thumbnails[thumbnailIndex];\n    const thumbnailFileType = thumbnailFile\n      ? _getFileType(thumbnailFile)\n      : null;\n    const thumbnailTarget = `${\n      thumbnailFileType?.element ?? \"img\"\n    }[data-torrent=\"${item.magnetURI}\"]`;\n\n    if (fileType.element === \"video\" && thumbnailFile) {\n      const cachedThumbnail = await getCachedFile(\n        getCacheFileName(thumbnailFile)\n      );\n\n      if (cachedThumbnail) {\n        renderCachedFile(cachedThumbnail, thumbnailTarget);\n        return;\n      }\n\n      renderTorrent({\n        file: thumbnailFile,\n        type: thumbnailFileType,\n        torrentMode,\n        torrent: item\n      });\n\n      return;\n    }\n\n    if (fileType.element === \"video\" && !thumbnailFile) {\n      showDynamicThumbnail({\n        thumbnailFile,\n        fileType,\n        item\n      });\n\n      return;\n    }\n\n    return {\n      thumbnailFile\n    };\n  };\n\nexport const attachMedia = async (posts = [], torrentMode = true) => {\n  const torrentTasks = await Promise.all(\n    posts.map(async post => {\n      const { contentItems, id } = post;\n      const supportedItems = Object.entries(contentItems).filter(\n        ([, item]) => supportedFileTypes[item.type]\n      );\n\n      if (!supportedItems) {\n        return [];\n      }\n\n      const webTorrentClient = await initializeClient();\n\n      return supportedItems.map(\n        ([key, item]) =>\n          () =>\n            new Promise(resolve => {\n              const getCacheFileName = getCacheId({ id, key });\n              const torrentExists = webTorrentClient.get(item.magnetURI);\n\n              if (torrentExists) {\n                resolve(true);\n                return;\n              }\n\n              webTorrentClient.add(item.magnetURI, async torrent => {\n                // Proceed to the next torrent in queue\n                resolve(true);\n\n                const files = torrent.files.filter(file => {\n                  const extension = file.name?.split(\".\")?.slice(-1)[0];\n                  const supportedFileType = Object.values(\n                    supportedFileTypes\n                  ).filter(options => options.formats.includes(extension))[0];\n                  if (supportedFileType) {\n                    const fileType = supportedFileType;\n                    const matched = fileType.formats.includes(extension);\n                    return matched;\n                  }\n                  return false;\n                });\n\n                const thumbnails = files.filter(file =>\n                  file.name.match(/-thumb\\.([\\w\\d]){2,4}$/gi)\n                );\n                const thumbnailFileNames = thumbnails.map(file =>\n                  file.name.replace(/\\.([\\w\\d]){2,4}$/gi, \"\")\n                );\n                const renderThumbnail = getThumbnailRenderer({\n                  getCacheFileName,\n                  thumbnailFileNames,\n                  torrentMode\n                });\n\n                files.map(async file => {\n                  // Skip thumbnails\n                  if (thumbnailFileNames.includes(file.name)) {\n                    return;\n                  }\n\n                  const fileType = _getFileType(file);\n\n                  if (!fileType) {\n                    return;\n                  }\n\n                  const fileName = getCacheFileName(file);\n\n                  const element = fileType.element;\n                  const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n                  const cachedFile = await getCachedFile(fileName);\n\n                  renderThumbnail({\n                    fileName: file.name,\n                    thumbnails,\n                    fileType,\n                    item\n                  });\n\n                  if (cachedFile) {\n                    const torrent = webTorrentClient.get(item.magnetURI);\n\n                    if (torrent) {\n                      torrent.destroy();\n                    }\n\n                    renderCachedFile(cachedFile, target);\n                    return;\n                  }\n\n                  renderTorrent({\n                    file,\n                    type: fileType,\n                    torrentMode,\n                    torrent: item\n                  });\n                });\n\n                torrent.on(\"done\", () => {\n                  files.map(file => {\n                    const fileType = _getFileType(file);\n                    const fileName = getCacheFileName(file);\n                    const element = fileType.element;\n                    const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n\n                    file.getBlob(async (err, blob) => {\n                      if (err) {\n                        console.warn(err);\n                        return;\n                      }\n\n                      console.log(\"Caching loaded file...\", fileName, blob);\n                      await saveFile(fileName, blob);\n                      const element = document.querySelector(target);\n                      if (\n                        element?.dataset.played === \"false\" &&\n                        !element?.getAttribute(\"src\")\n                      ) {\n                        const cachedFile = await getCachedFile(fileName);\n                        renderCachedFile(cachedFile, target);\n                      }\n                    });\n                  });\n                });\n              });\n            })\n      );\n    })\n  );\n  const contentItems = torrentTasks.reduce(\n    (torrents, contentItems) => [...torrents, ...contentItems],\n    []\n  );\n\n  runSerial(contentItems);\n};\n","import React from \"react\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import React, { useCallback, useMemo, useRef, useState } from \"react\";\nimport useInView from \"react-cool-inview\";\nimport classNames from \"classnames\";\nimport TipRibbon from \"./TipRibbon\";\nimport \"../../../styles/video.js.css\";\nimport \"../css/index.css\";\n\nconst Video = ({ item, index, tipValue, tipCounter }) => {\n  const videoRef = useRef();\n  const [playing, setPlaying] = useState(false);\n  const { observe } = useInView({\n    trackVisibility: false,\n    delay: 100,\n    onEnter: () => {\n      if (videoRef.current) {\n        setPlaying(true);\n        videoRef.current.play();\n      }\n    },\n    onLeave: () => {\n      if (!videoRef.current) {\n        return;\n      }\n\n      setPlaying(false);\n      videoRef.current.pause();\n    }\n  });\n\n  const togglePlayingStatus = useCallback(() => {\n    const updatedPlaying = !playing;\n    setPlaying(updatedPlaying);\n    if (videoRef.current) {\n      if (!updatedPlaying) {\n        videoRef.current.pause();\n        return;\n      }\n\n      console.log(\"Playing video\", updatedPlaying);\n      videoRef.current.play();\n    }\n  }, [playing]);\n\n  const videoHeight = useMemo(() => {\n    if (CSS.supports(\"aspect-ratio: 16 / 9\")) {\n      return {\n        aspectRatio: \"16 / 9\"\n      };\n    }\n\n    return {\n      height: 400\n    };\n  }, []);\n\n  const onPause = useCallback(() => {\n    if (videoRef.current?.readyState === 4) {\n      setPlaying(false);\n    }\n  }, [videoRef]);\n\n  return (\n    <div className=\"media-container\" ref={observe}>\n      <div\n        className=\"video-container\"\n        style={{\n          width: \"100%\",\n          cursor: \"pointer\",\n          ...videoHeight\n        }}\n      >\n        <div\n          className={classNames({\n            \"thumbnail-container\": true,\n            \"video-hidden\": playing\n          })}\n          onClick={togglePlayingStatus}\n        >\n          <div className=\"play-btn\">\n            <i className=\"fas fa-play\" />\n          </div>\n          <img\n            className=\"video-thumbnail\"\n            data-torrent={item.magnetURI}\n            data-file-key={index}\n            alt=\"Video thumbnail\"\n          />\n          <video\n            className=\"dynamic-thumbnail hidden\"\n            data-torrent={item.magnetURI}\n            data-file-key={index}\n            alt=\"Video thumbnail\"\n            data-played=\"false\"\n            controls={false}\n            muted\n            autoPlay={false}\n          />\n        </div>\n        <video\n          className={classNames({\n            \"torrent-video video-js vjs-default-skin\": true,\n            \"video-hidden\": !playing\n          })}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          data-played=\"false\"\n          controls\n          ref={videoRef}\n          muted\n          onPause={onPause}\n        />\n        <TipRibbon tipCounter={tipCounter} tipValue={tipValue} />\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","import React, { useRef, useEffect } from \"react\";\nimport useInView from \"react-cool-inview\";\nimport TipRibbon from \"./TipRibbon\";\nimport videojs from \"video.js\";\n\nconst REACT_APP_SL_SEED_URI = \"https://webtorrent.shock.network\";\nconst STREAM_STATUS_URI = `${REACT_APP_SL_SEED_URI}/rtmpapi/api/streams/live`;\n\nconst Stream = ({ item, tipValue, tipCounter, hideRibbon, width }) => {\n  const playerDOM = useRef(null);\n  const { observe } = useInView({\n    trackVisibility: true,\n    delay: 100,\n    unobserveOnEnter: true\n  });\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  const { liveStatus } = item;\n  useEffect(() => {\n    const player = videojs(playerDOM.current, {\n      autoplay: true,\n      muted: true,\n      aspectRatio: \"16:9\"\n    });\n    player.src({\n      src: item.magnetURI,\n      type: \"application/x-mpegURL\"\n    });\n    //listen for 404s from the player\n    //player.tech().on('retryplaylist', () => {\n    //  console.log('retryplaylist');\n    //});\n    player.play();\n  }, [item]);\n  useEffect(() => {\n    if (item.viewersSocketUrl) {\n      const socket = new WebSocket(\n        `${item.viewersSocketUrl}/stream/watch/${item.userToken}`\n      );\n      socket.addEventListener(\"open\", () => {\n        console.log(\"viewer socket open\");\n      });\n      return () => {\n        socket.close();\n      };\n    }\n  }, [item]);\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {liveStatus === \"waiting\" && <p>The stream did not start yet.</p>}\n        {liveStatus === \"wasLive\" && <p>The stream is over</p>}\n        {!liveStatus && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            liveStatus === \"live\"\n              ? { width: \"100%\" }\n              : { display: \"none\", width: \"100%\" }\n          }\n          ref={observe}\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","import React, { useState } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"./TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"../css/index.css\";\nimport { useCallback } from \"react\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({ id, item, index, postId, tipValue, tipCounter }) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [animationTimer, zoomLoaded]\n  );\n\n  return (\n    <div className=\"media-container\">\n      <ControlledZoom\n        isZoomed={zoomed}\n        onZoomChange={handleZoomChange}\n        overlayBgColorStart=\"#16191c00\"\n        overlayBgColorEnd=\"#16191c\"\n      >\n        <img\n          className={`torrent-img torrent-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          src={decodeURIComponent(item.magnetURI.replace(/.*(ws=)/gi, \"\"))}\n          style={{ opacity: previewVisible ? 1 : 0 }}\n        />\n        <img\n          className={`enlarged-img enlarged-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-file-key={index}\n          onLoad={() => {\n            setZoomLoaded(true);\n          }}\n          style={{ opacity: zoomLoaded ? 1 : 0 }}\n          src={decodeURIComponent(item.magnetURI.replace(/.*(ws=)/gi, \"\"))}\n        />\n        <TipRibbon\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          zoomed={zoomed}\n        />\n      </ControlledZoom>\n    </div>\n  );\n};\n\nexport default Image;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\nimport Video from \"../Video\";\nimport Stream from \"../Stream\";\nimport Image from \"../Image\";\n\nconst MediaCarousel = ({\n  id,\n  timestamp,\n  avatar,\n  tipCounter,\n  tipValue,\n  contentItems\n}) => {\n  const [carouselRef, carouselAPI] = useEmblaCarousel({\n    slidesToScroll: 1,\n    align: \"center\",\n    draggable: false\n  });\n  const [sliderLength, setSliderLength] = useState(0);\n  const [activeSlide, setActiveSlide] = useState(0);\n\n  const nextSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollNext()) {\n      carouselAPI.scrollNext();\n    }\n  }, [carouselAPI]);\n\n  const prevSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollPrev()) {\n      carouselAPI.scrollPrev();\n    }\n  }, [carouselAPI]);\n\n  const handleUserKeyDown = useCallback(\n    e => {\n      if (sliderLength === 0) return;\n      const { key } = e;\n\n      if (key === \"ArrowRight\") {\n        nextSlide();\n      }\n\n      if (key === \"ArrowLeft\") {\n        prevSlide();\n      }\n    },\n    [sliderLength, prevSlide, nextSlide]\n  );\n\n  const updateActiveSlide = useCallback(() => {\n    setActiveSlide(carouselAPI.selectedScrollSnap());\n  }, [carouselAPI, setActiveSlide]);\n\n  const parseContent = useCallback(\n    ([key, item], index) => {\n      if (item.type === \"text/paragraph\") {\n        return <p key={key}>{item.text}</p>;\n      }\n\n      if (item.type === \"image/embedded\") {\n        return (\n          <Image\n            id={key}\n            item={item}\n            index={index}\n            postId={id}\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            key={`${id}-${index}`}\n          />\n        );\n      }\n\n      if (item.type === \"video/embedded\") {\n        return (\n          <Video\n            item={item}\n            index={index}\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            key={`${id}-${index}`}\n          />\n        );\n      }\n\n      if (item.type === \"stream/embedded\") {\n        return (\n          <Stream\n            id={key}\n            item={item}\n            index={index}\n            postId={id}\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            key={`${id}-${index}`}\n          />\n        );\n      }\n\n      return null;\n    },\n    [id, tipCounter, tipValue]\n  );\n\n  useEffect(() => {\n    if (!carouselAPI) {\n      return;\n    }\n\n    carouselAPI.on(\"scroll\", updateActiveSlide);\n    window.addEventListener(\"keydown\", handleUserKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyDown);\n      carouselAPI.off(\"scroll\", updateActiveSlide);\n    };\n  }, [carouselAPI, sliderLength, handleUserKeyDown, updateActiveSlide]);\n\n  useEffect(() => {\n    if (!carouselAPI) {\n      return;\n    }\n\n    setSliderLength(carouselAPI.scrollSnapList().length);\n  }, [carouselAPI]);\n\n  return (\n    <div className=\"media-content-carousel\">\n      {sliderLength > 1 ? (\n        <div className=\"media-carousel-controls-container\">\n          <div\n            className=\"media-carousel-arrow fas fa-angle-left\"\n            onClick={prevSlide}\n          />\n          <div className=\"media-carousel-pages\">\n            {Array.from({ length: sliderLength }).map((_, key) => (\n              <div\n                className={classNames({\n                  \"media-carousel-page\": true,\n                  \"active-carousel-page\": activeSlide === key\n                })}\n                onClick={() => carouselAPI?.scrollTo(key)}\n              />\n            ))}\n          </div>\n          <div\n            className=\"media-carousel-arrow fas fa-angle-right\"\n            onClick={nextSlide}\n          />\n        </div>\n      ) : null}\n      <div className=\"media-content-root\" ref={carouselRef}>\n        <div className=\"media-content-container\">\n          {contentItems.map(parseContent)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MediaCarousel;\n","import { supportedFormats } from \"./Torrents\";\n\nexport const getPostDescription = ({ contentItems, username }) =>\n  contentItems\n    .filter(item => item.type === \"text/paragraph\")\n    .map(item => item.text)\n    .join(\"\\n\") || `View ${username}'s posts on Lightning.Page`;\n\nexport const getMediaMetadata = contentItems => {\n  return contentItems\n    .filter(item => [\"image/embedded\", \"video/embedded\"].includes(item.type))\n    .map((item, index) => {\n      const file = item.magnetURI.replace(/.*(ws=)/gi, \"\");\n      const type = item.type.replace(\"/embedded\", \"\");\n      const [compatibleURL] = supportedFormats.filter(format =>\n        file.toLowerCase().endsWith(`.${format.toLowerCase()}`)\n      );\n\n      if (compatibleURL) {\n        return {\n          url: compatibleURL,\n          type\n        };\n      }\n\n      const [, url] =\n        item.magnetURI.match(/(?:magnet:\\?xs=)([\\w\\d].*torrent)/i) ?? [];\n      const sanitizedUrl = decodeURIComponent(url ?? \"\").replace(\n        /\\/[\\w\\d]+.torrent/gi,\n        \"\"\n      );\n\n      return {\n        url: `${sanitizedUrl}/${type}-${index}.mp4`,\n        thumbnail: `${sanitizedUrl}/${type}-${index}-thumb.png`,\n        type\n      };\n    });\n};\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport CopyClipboard from \"react-copy-to-clipboard\";\nimport { getMediaMetadata, getPostDescription } from \"../../../utils/Post\";\n\nconst ShareBtn = ({ publicKey, id, username, pinned, contentItems = [] }) => {\n  const [copiedLink, setCopiedLink] = useState(false);\n\n  const url = useMemo(() => {\n    const media = getMediaMetadata(contentItems);\n    const description = getPostDescription({\n      contentItems,\n      username\n    });\n    const link = `https://${window.location.host}/${publicKey}/post/${id}`;\n\n    const metadata = {\n      title: `Post by ${username}`,\n      url: link,\n      type: `website`,\n      media,\n      description\n    };\n\n    const metadataBase64 = btoa(\n      unescape(encodeURIComponent(JSON.stringify(metadata)))\n    );\n    const shareLink = `${link}?metadata=${metadataBase64}`;\n\n    return shareLink;\n  }, [contentItems, username, publicKey, id]);\n\n  const sharePost = useCallback(() => {\n    if (navigator.share) {\n      navigator.share({\n        text: `Check out ${username}'s post on Lightning.Page!`,\n        url\n      });\n    }\n  }, [username, url]);\n\n  const onCopy = useCallback(() => {\n    setCopiedLink(true);\n  }, []);\n\n  const getShareMessage = useCallback(\n    () => (copiedLink ? \"Post link copied!\" : \"Share this post\"),\n    [copiedLink]\n  );\n\n  useEffect(() => {\n    ReactTooltip.rebuild();\n    const timeout = setTimeout(() => {\n      setCopiedLink(false);\n      ReactTooltip.rebuild();\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [copiedLink]);\n\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  }, []);\n\n  if (!navigator.share) {\n    const tooltipId = `share-${publicKey}-${pinned ? \"pinned\" : \"\"}-${id}`;\n    return (\n      <CopyClipboard text={url} onCopy={onCopy}>\n        <div className=\"share-btn-container\">\n          <div\n            className=\"share-btn\"\n            data-tip={getShareMessage()}\n            data-for={tooltipId}\n          >\n            <i className=\"fas fa-external-link-alt\"></i>\n          </div>\n          <ReactTooltip\n            effect=\"solid\"\n            backgroundColor=\"#3a4d67\"\n            getContent={[getShareMessage, 30]}\n            id={tooltipId}\n          />\n        </div>\n      </CopyClipboard>\n    );\n  }\n\n  return (\n    <div className=\"share-btn\" onClick={sharePost}>\n      <i className=\"fas fa-external-link-alt\"></i>\n    </div>\n  );\n};\n\nexport default ShareBtn;\n","import React, {\n  useEffect,\n  useCallback,\n  useState,\n  useMemo,\n  useLayoutEffect,\n} from \"react\";\nimport moment from \"moment\";\nimport Tooltip from \"react-tooltip\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport useInView from \"react-cool-inview\";\nimport { Helmet } from \"react-helmet\";\nimport { updateWallPost } from \"../../actions/UserActions\";\nimport { openModal } from \"../../actions/TipActions\";\nimport { gunUser, fetchPath } from \"../../utils/Gun\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport MediaCarousel from \"./components/Media\";\nimport ShareBtn from \"./components/ShareBtn\";\nimport \"./css/index.css\";\nimport { getMediaMetadata, getPostDescription } from \"../../utils/Post\";\n\nconst STATIC_THUMBNAIL = `${window.location.origin}/link-static.jpg`;\n\nconst Post = ({\n  id,\n  timestamp,\n  avatar,\n  tipCounter,\n  tipValue,\n  publicKey,\n  contentItems = {},\n  username,\n  isOnlineNode,\n  pinned,\n}) => {\n  const dispatch = useDispatch();\n  const { observe } = useInView({\n    trackVisibility: false,\n    unobserveOnEnter: true,\n    onEnter: () => {\n      const post = { contentItems, id };\n      attachMedia([post], false);\n    },\n  });\n\n  const [liveStatus, setLiveStatus] = useState(\"\");\n  const [viewersCounter, setViewersCounter] = useState(0);\n\n  const mediaContent = useMemo(\n    () =>\n      Object.entries(contentItems).filter(\n        ([_, item]) => item.type !== \"text/paragraph\"\n      ),\n    [contentItems]\n  );\n\n  const mediaMetadata = useMemo(\n    () => getMediaMetadata(Object.values(contentItems)),\n    [contentItems]\n  );\n\n  const textContent = useMemo(\n    () =>\n      Object.entries(contentItems).filter(\n        ([_, item]) => item.type === \"text/paragraph\"\n      ),\n    [contentItems]\n  );\n\n  const getMediaType = useCallback((mediaItem) => {\n    if (mediaItem.type === \"stream\") {\n      return \"video\";\n    }\n\n    return mediaItem.type;\n  }, []);\n\n  const tipPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    dispatch(\n      openModal({\n        targetType: \"tip\",\n        ackInfo: id,\n      })\n    );\n  }, [dispatch, id, isOnlineNode]);\n\n  useEffect(() => {\n    fetchPath({\n      path: `posts/${id}/tipsSet`,\n      gunPointer: gunUser(publicKey),\n      method: \"load\",\n    }).then((data) => {\n      const tipSet = data ? Object.values(data) : [];\n      const lenSet = tipSet.length;\n      const tot =\n        lenSet > 0\n          ? tipSet.reduce((acc, val) => Number(val) + Number(acc), 0)\n          : 0;\n      dispatch(\n        updateWallPost({\n          postID: id,\n          data: {\n            tipValue: tot,\n            tipCounter: lenSet,\n          },\n        })\n      );\n    });\n  }, [dispatch, id, publicKey]);\n\n  //effect for liveStatus and viewers counter\n  useEffect(() => {\n    const values = Object.values(contentItems);\n    const videoContent = values.find(\n      (item) => item.type === \"video/embedded\" && item.liveStatus === \"wasLive\"\n    );\n    const streamContent = values.find(\n      (item) => item.type === \"stream/embedded\" && item.liveStatus === \"live\"\n    );\n    let status = \"\";\n    if (videoContent) {\n      status = \"was Live\";\n    }\n    if (streamContent) {\n      status = \"is Live\";\n      if (streamContent.viewersCounter) {\n        setViewersCounter(streamContent.viewersCounter);\n      }\n    }\n    if (status) {\n      setLiveStatus(status);\n    }\n  }, [contentItems, setLiveStatus]);\n\n  useEffect(() => {\n    Tooltip.rebuild();\n  }, []);\n\n  useLayoutEffect(() => {\n    if (pinned) {\n      window.prerenderReady = true;\n    }\n  }, [pinned]);\n\n  return (\n    <div className=\"post\">\n      {pinned && (\n        <Helmet>\n          <meta property=\"og:title\" content={username} />\n          <meta property=\"twitter:title\" content={username} />\n          <meta\n            property=\"og:description\"\n            content={getPostDescription({\n              contentItems: Object.values(contentItems),\n              username,\n            })}\n          />\n        </Helmet>\n      )}\n      {mediaMetadata.map((item) => {\n        const type = getMediaType(item);\n        return (\n          <React.Fragment key={item.id}>\n            <Helmet>\n              <meta property={`og:${type}:width`} content=\"600\" />\n              <meta property={`og:${type}:height`} content=\"314\" />\n              <meta property={`og:${type}`} content={item.url} />\n            </Helmet>\n            {type === \"video\" && (\n              <Helmet>\n                <meta property=\"og:image:width\" content=\"600\" />\n                <meta property=\"og:image:height\" content=\"314\" />\n                <meta\n                  property=\"og:image\"\n                  content={item.thumbnail ?? STATIC_THUMBNAIL}\n                />\n                <meta property=\"twitter:image:width\" content=\"600\" />\n                <meta property=\"twitter:image:height\" content=\"314\" />\n                <meta\n                  property=\"twitter:image\"\n                  content={item.thumbnail ?? STATIC_THUMBNAIL}\n                />\n              </Helmet>\n            )}\n          </React.Fragment>\n        );\n      })}\n      <div className=\"head\">\n        <div className=\"user\">\n          <Link\n            className=\"av\"\n            to={`/${publicKey}`}\n            style={{\n              backgroundImage: `url(${avatar})`,\n            }}\n          />\n          <div className=\"details\">\n            <div className=\"username\">\n              <Link to={`/${publicKey}`}>{username}</Link>\n              {liveStatus && (\n                <p className=\"liveStatus\">\n                  {liveStatus}\n                  <i\n                    className={`fas fa-circle liveStatusIcon ${\n                      liveStatus === \"is Live\" ? \"liveIcon\" : \"\"\n                    }`}\n                  ></i>\n                  {liveStatus === \"is Live\" && (\n                    <span> | {viewersCounter} watching</span>\n                  )}\n                </p>\n              )}\n            </div>\n            <p>{moment.utc(timestamp).fromNow()}</p>\n          </div>\n        </div>\n        <ShareBtn\n          publicKey={publicKey}\n          id={id}\n          username={username}\n          pinned={pinned}\n          contentItems={contentItems}\n        />\n      </div>\n\n      <div className=\"content\" ref={observe}>\n        {textContent.map(([key, item]) => (\n          <p key={key}>{item.text}</p>\n        ))}\n        <MediaCarousel\n          contentItems={mediaContent}\n          id={id}\n          timestamp={timestamp}\n          avatar={avatar}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n        />\n      </div>\n\n      <div className=\"actions\">\n        <div\n          className=\"icon-tip-btn\"\n          data-tip=\"Tip this post\"\n          onClick={tipPost}\n        >\n          <i className=\"tip-icon icon-thin-feed\"></i>\n        </div>\n        <Tooltip backgroundColor=\"#3a4d67\" effect=\"solid\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n"],"sourceRoot":""}