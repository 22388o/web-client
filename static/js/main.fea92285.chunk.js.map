{"version":3,"sources":["utils/Gun.js","actions/UserActions.js","actions/TransactionActions.js","common/Loader/index.js","../node_modules/gun sync","actions/AuthActions.js","App.js","reducers/UserReducer.js","reducers/AuthReducer.js","reducers/TransactionReducer.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["peersConfig","data","JSON","parse","err","safeParse","process","PEERS","peers","wait","ms","Promise","resolve","reject","setTimeout","_randomString","length","randomString","randomChar","n","Math","floor","random","String","fromCharCode","_filterGunProps","key","_isIncompleteGunResponse","console","log","undefined","Array","isArray","reduce","empty","item","stringifiedData","stringify","filteredGunProps","Object","entries","filter","warn","parseGunPath","path","gunPointer","split","gun","get","Gun","GunDB","fetchPath","retryDelay","retryLimit","retryCondition","method","_retryCount","_fallbackResult","GunContext","event","a","retryResult","setPath","response","set","listenPath","callback","on","createRandomGunUser","randomAlias","randomPass","user","create","error","field","message","_error","_event","alias","pass","authUser","auth","gunUser","publicKey","Error","$$_SHOCKWALLET__ENCRYPTED__","$$__SHOCKWALLET__MSG__","ACTIONS","LOAD_USER_WALL","LOAD_USER_WALL_TOTAL_PAGES","RESET_USER_WALL","UPDATE_WALL_POST","RESET_USER_DATA","LOAD_USER_DATA","LOAD_USER_AVATAR","UPDATE_USER_PROFILE","getUserAvatar","dispatch","avatar","type","getUserHeader","header","fetchUserProfile","includeAvatar","all","bio","displayName","lastSeenApp","lastSeenNode","getUserProfile","getUserPost","id","wallPostKey","contentItemsKey","wallPost","contentItems","filteredContentItems","map","text","magnetURI","width","height","liveStatus","playbackMagnet","finalType","finalMagnet","fetchedContentItems","getSharedPost","sharedGunPointer","sharedPostKey","sharedPost","date","shareDate","originalAuthor","getUserWall","rawPosts","rawSharedPosts","filteredRawPosts","filteredRawSharedPosts","fetchedPosts","sortedPosts","sort","b","posts","page","updateUserProfile","updateWallPost","resetUserWall","resetUserData","LOAD_PAYMENT_REQUEST","RESET_PAYMENT_REQUEST","payUser","senderPair","recipientPublicKey","amount","metadata","me","recipientUser","recipientUserEPub","SEA","secret","sea","orderAddress","encrypt","toString","encryptedAmount","encryptedMemo","order","from","pub","memo","timestamp","Date","now","newOrder","_","slice","newOrderId","encryptedOrder","decrypt","replace","decryptedResponse","decryptedOrder","resetPaymentRequest","Loader","className","webpackEmptyContext","req","e","code","keys","module","exports","LOAD_GUN_PAIR","generateGunPair","localStorage","getItem","ePublicKey","randomUser","setItem","newUserEPublicKey","epub","UserPage","React","lazy","withRouter","fallback","component","to","backgroundColor","effect","INITIAL_STATE","wall","totalPages","profile","state","action","updatedPost","post","postID","pair","paymentRequest","transaction","reducers","combineReducers","UserReducer","AuthReducer","TransactionReducer","store","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","compose","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fea92285.chunk.js","sourcesContent":["import GunDB from \"gun/gun\";\nimport \"gun/sea\";\nimport \"gun/lib/load\";\n\nconst safeParse = data => {\n  try {\n    return JSON.parse(data);\n  } catch (err) {\n    return null;\n  }\n};\n\nconst peersConfig = safeParse(process.env.PEERS);\n\nconst peers = peersConfig\n  ? peersConfig\n  : [\n      \"https://gun.shock.network:8765/gun\"\n      // \"http://gun2.shock.network:8765/gun\"\n    ];\n\nconst wait = ms =>\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(true);\n    }, ms);\n  });\n\nconst _randomString = length => {\n  let randomString = \"\";\n  const randomChar = function () {\n    const n = Math.floor(Math.random() * 62);\n    if (n < 10) return n; //1-10\n    if (n < 36) return String.fromCharCode(n + 55); //A-Z\n    return String.fromCharCode(n + 61); //a-z\n  };\n  while (randomString.length < length) randomString += randomChar();\n  return randomString;\n};\n\nconst _filterGunProps = ([key, item]) => item && key !== \"_\" && key !== \"#\";\n\nconst _isIncompleteGunResponse = data => {\n  try {\n    console.log(\"Incomplete Gun Response Check:\", typeof data, data);\n    if (data === null || data === undefined) {\n      return true;\n    }\n\n    if (Array.isArray(data)) {\n      if (!data.length) {\n        return true;\n      }\n\n      const incompleteCollection = data.reduce((empty, item) => {\n        if (empty) {\n          return empty;\n        }\n\n        return _isIncompleteGunResponse(item);\n      });\n\n      return incompleteCollection;\n    }\n\n    if (typeof data === \"object\") {\n      if (!data || typeof data.err === \"number\") {\n        return true;\n      }\n\n      const stringifiedData = JSON.stringify(data);\n      console.log(data, stringifiedData);\n\n      if (stringifiedData === \"{}\") {\n        return true;\n      }\n\n      const filteredGunProps = Object.entries(data).filter(_filterGunProps);\n\n      console.log(filteredGunProps, filteredGunProps?.length);\n\n      if (!filteredGunProps?.length) {\n        return true;\n      }\n    }\n\n    return false;\n  } catch (err) {\n    console.warn(\"An error has occurred:\", err);\n    return true;\n  }\n};\n\nconst parseGunPath = ({ path, gunPointer }) =>\n  path.split(\"/\").reduce((gun, path) => gun.get(path), gunPointer);\n\nexport const Gun = GunDB(peers);\n\nexport const fetchPath = ({\n  path = \"\",\n  retryDelay = 500,\n  retryLimit = 3,\n  retryCondition = _isIncompleteGunResponse,\n  gunPointer = Gun,\n  method = \"once\",\n\n  _retryCount = 0,\n  _fallbackResult\n}) =>\n  new Promise(resolve => {\n    if (_retryCount > retryLimit) {\n      resolve(_fallbackResult);\n      return;\n    }\n    if (_retryCount > 0) {\n      console.log(\"Retrying event:\", path, `${_retryCount}/${retryLimit}`);\n    }\n    const GunContext = parseGunPath({ path, gunPointer });\n    console.log(\"Fetching Path:\", path);\n    GunContext[method](async event => {\n      console.log(path + \" Response:\", event);\n      if (retryCondition && retryCondition(event)) {\n        await wait(retryDelay);\n        const retryResult = await fetchPath({\n          path,\n          retryDelay,\n          retryLimit,\n          retryCondition,\n          gunPointer,\n\n          _retryCount: _retryCount + 1,\n          _fallbackResult: event\n        });\n        resolve(retryResult);\n        return;\n      }\n\n      resolve(event);\n    });\n  });\n\n// Wraps GunDB data callbacks to provide better error handling\nexport const wrap = callback => event => {\n  console.log(\"Event received!\", event);\n  if (event?.err) {\n    console.error(\"[GunDB] Event error:\", event?.err, event);\n  }\n\n  if (!event?.put) {\n    console.warn(\"[GunDB] Item not found:\", event?.put, event);\n  }\n\n  return callback(\n    event,\n    event.err || !event.put\n      ? {\n          field: !event.put ? \"key\" : \"unknown\",\n          message: event.err\n            ? event.err\n            : !event.put\n            ? \"Key not found\"\n            : \"Unknown\",\n          gunErr: event.err\n        }\n      : null\n  );\n};\n\nexport const putPath = ({ path = \"\", data = {}, gunPointer = Gun }) =>\n  new Promise((resolve, reject) => {\n    const GunContext = parseGunPath({ path, gunPointer });\n    GunContext.put(\n      data,\n      wrap((event, err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(event);\n      })\n    );\n  });\n\nexport const setPath = ({ path = \"\", data = {}, gunPointer = Gun }) =>\n  new Promise((resolve, reject) => {\n    const GunContext = parseGunPath({ path, gunPointer });\n    const response = GunContext.set(data, event => {\n      console.log(data);\n      resolve(response);\n    });\n  });\n\nexport const listenPath = ({ path = \"\", gunPointer = Gun, callback }) => {\n  const GunContext = parseGunPath({ path, gunPointer });\n  return GunContext.on(event => {\n    callback(event);\n  });\n};\n\nexport const createRandomGunUser = () =>\n  new Promise((resolve, reject) => {\n    const randomAlias = _randomString(10);\n    const randomPass = _randomString(10);\n    Gun.user().create(randomAlias, randomPass, event => {\n      if (event.err) {\n        console.error(\"An error has occurred while initializing a new user\");\n        reject({\n          field: \"gundb\",\n          message: \"An error has occurred while initializing a new user\",\n          _error: event.err,\n          _event: event\n        });\n        return;\n      }\n      resolve({ ...event, alias: randomAlias, pass: randomPass });\n    });\n  });\n\nexport const authUser = (alias, pass) =>\n  new Promise((resolve, reject) => {\n    Gun.user().auth(alias, pass, user => {\n      resolve(user);\n    });\n  });\n\nexport const gunUser = publicKey => {\n  console.log(\"Getting Gun User:\", publicKey);\n  if (!publicKey) {\n    throw new Error(\"Undefined public key\");\n  }\n  return Gun.user(publicKey);\n};\n\n// Magic number provided from GunDB docs\nexport const DEFAULT_ONCE_WAIT_MS = 99;\n\nexport const $$_SHOCKWALLET__ENCRYPTED__ = \"$$_SHOCKWALLET__ENCRYPTED__\";\n\nexport const $$__SHOCKWALLET__MSG__ = \"$$__SHOCKWALLET__MSG__\";\n","import { Gun, fetchPath } from \"../utils/Gun\";\n\nexport const ACTIONS = {\n  LOAD_USER_WALL: \"wall/load\",\n  LOAD_USER_WALL_TOTAL_PAGES: \"wall/loadTotalPages\",\n  RESET_USER_WALL: \"wall/reset\",\n  UPDATE_WALL_POST: \"wallPost/update\",\n  RESET_USER_DATA: \"user/reset\",\n  LOAD_USER_DATA: \"user/load\",\n  LOAD_USER_AVATAR: \"avatar/load\",\n  UPDATE_USER_PROFILE: \"user/update\"\n};\n\nconst _filterGunProps = ([key, item]) => item && key !== \"_\" && key !== \"#\";\n\nconst GUN_POSTS_KEY = `posts`;\nconst GUN_SHARED_POSTS_KEY = `sharedPosts`;\n\nexport const getUserAvatar = publicKey => async dispatch => {\n  const gunUser = Gun.user(publicKey);\n  const avatar = await fetchPath({\n    path: \"profileBinary/avatar\",\n    gunPointer: gunUser\n  });\n\n  dispatch({\n    type: ACTIONS.UPDATE_USER_PROFILE,\n    data: { avatar }\n  });\n\n  return avatar;\n};\n\nexport const getUserHeader = publicKey => async dispatch => {\n  const gunUser = Gun.user(publicKey);\n  const header = await fetchPath({\n    path: \"profileBinary/header\",\n    gunPointer: gunUser\n  });\n\n  dispatch({\n    type: ACTIONS.UPDATE_USER_PROFILE,\n    data: { header }\n  });\n\n  return header;\n};\n\nexport const fetchUserProfile = async ({\n  publicKey,\n  includeAvatar = false\n}) => {\n  const gunUser = Gun.user(publicKey);\n  const [\n    bio,\n    displayName,\n    alias,\n    lastSeenApp,\n    lastSeenNode,\n    avatar\n  ] = await Promise.all([\n    fetchPath({\n      path: \"Profile/bio\",\n      gunPointer: gunUser\n    }),\n    fetchPath({\n      path: \"Profile/displayName\",\n      gunPointer: gunUser\n    }),\n    fetchPath({\n      path: \"alias\",\n      gunPointer: gunUser\n    }),\n    fetchPath({\n      path: \"Profile/lastSeenApp\",\n      gunPointer: gunUser\n    }),\n    fetchPath({\n      path: \"Profile/lastSeenNode\",\n      gunPointer: gunUser\n    }),\n    includeAvatar\n      ? fetchPath({\n          path: \"profileBinary/avatar\",\n          gunPointer: gunUser\n        })\n      : null\n  ]);\n\n  const user = {\n    publicKey,\n    bio,\n    displayName,\n    alias,\n    lastSeenNode,\n    lastSeenApp,\n    avatar\n  };\n\n  return user;\n};\n\nexport const getUserProfile = publicKey => async dispatch => {\n  const user = await fetchUserProfile({ publicKey });\n\n  console.log(\"User:\", user);\n\n  dispatch({\n    type: ACTIONS.LOAD_USER_DATA,\n    data: user\n  });\n\n  return user;\n};\n\nexport const getWallTotalPages = publicKey => async dispatch => {\n  const totalPages = await fetchPath({\n    path: \"wall/numOfPages\",\n    gunPointer: Gun.user(publicKey)\n  });\n\n  if (!totalPages && totalPages !== 0) {\n    throw {\n      field: \"publicKey\",\n      message: \"Wall was not found for the specified user\"\n    };\n  }\n\n  dispatch({\n    type: ACTIONS.LOAD_USER_WALL_TOTAL_PAGES,\n    data: totalPages\n  });\n\n  return totalPages;\n};\n\nexport const getUserPost = async ({ id, gunPointer }) => {\n  const wallPostKey = `${GUN_POSTS_KEY}/${id}`;\n  const contentItemsKey = `${wallPostKey}/contentItems`;\n\n  const wallPost = await fetchPath({\n    path: wallPostKey,\n    gunPointer,\n    retryLimit: 5,\n    retryDelay: 1000\n  });\n  const contentItems = await fetchPath({\n    path: contentItemsKey,\n    gunPointer,\n    retryLimit: 5,\n    retryDelay: 500\n  });\n  const filteredContentItems = Object.entries(contentItems).filter(\n    _filterGunProps\n  );\n  const fetchedContentItems = await Promise.all(\n    filteredContentItems.map(async ([id]) => {\n      const type = await fetchPath({\n        path: `${contentItemsKey}/${id}/type`,\n        gunPointer\n      });\n\n      if (type === \"text/paragraph\") {\n        const text = await fetchPath({\n          path: `${contentItemsKey}/${id}/text`,\n          gunPointer\n        });\n        return {\n          text,\n          type\n        };\n      }\n\n      if (type === \"video/embedded\") {\n        const [magnetURI, width, height] = await Promise.all([\n          fetchPath({\n            path: `${contentItemsKey}/${id}/magnetURI`,\n            gunPointer\n          }),\n          fetchPath({\n            path: `${contentItemsKey}/${id}/width`,\n            gunPointer\n          }),\n          fetchPath({\n            path: `${contentItemsKey}/${id}/height`,\n            gunPointer\n          })\n        ]);\n        return {\n          magnetURI,\n          width,\n          height,\n          type\n        };\n      }\n\n      if (type === \"image/embedded\") {\n        const [magnetURI, width, height] = await Promise.all([\n          fetchPath({\n            path: `${contentItemsKey}/${id}/magnetURI`,\n            gunPointer\n          }),\n          fetchPath({\n            path: `${contentItemsKey}/${id}/width`,\n            gunPointer\n          }),\n          fetchPath({\n            path: `${contentItemsKey}/${id}/height`,\n            gunPointer\n          })\n        ]);\n        return {\n          magnetURI,\n          width,\n          height,\n          type\n        };\n      }\n      if (type === \"stream/embedded\") {\n        const magnetURI = await fetchPath({\n          path: `${contentItemsKey}/${id}/magnetURI`,\n          gunPointer\n        })\n        const liveStatus = await fetchPath({\n          path: `${contentItemsKey}/${id}/liveStatus`,\n          gunPointer\n        })\n        const playbackMagnet = await fetchPath({\n          path: `${contentItemsKey}/${id}/playbackMagnet`,\n          gunPointer\n        })\n        let finalType = type\n        let finalMagnet = magnetURI\n        if(liveStatus === 'wasLive' && playbackMagnet){\n          finalMagnet = playbackMagnet\n          finalType = \"video/embedded\"\n        }\n        return {\n          magnetURI:finalMagnet,\n          width:0,\n          height:0,\n          type:finalType,\n          liveStatus,\n          playbackMagnet\n        };\n      }\n\n      return {\n        text: \"Unsupported media type\",\n        type\n      };\n    })\n  );\n\n  return {\n    ...(wallPost ?? {}),\n    id,\n    contentItems: fetchedContentItems ?? [],\n    type: \"post\"\n  };\n};\n\nexport const getSharedPost = async ({ id, sharedGunPointer }) => {\n  const sharedPostKey = `${GUN_SHARED_POSTS_KEY}/${id}`;\n\n  const sharedPost = await fetchPath({\n    path: sharedPostKey,\n    gunPointer: sharedGunPointer,\n    retryLimit: 5,\n    retryDelay: 1000\n  });\n\n  return {\n    id,\n    date: sharedPost.shareDate,\n    originalAuthor: sharedPost.originalAuthor,\n    type: \"shared\"\n  };\n};\n\nexport const getUserWall = publicKey => async dispatch => {\n  try {\n    const gunPointer = Gun.user(publicKey);\n    const [rawPosts, rawSharedPosts] = await Promise.all([\n      fetchPath({\n        path: GUN_POSTS_KEY,\n        gunPointer,\n        retryLimit: 5,\n        retryDelay: 1000\n      }),\n      fetchPath({\n        path: GUN_SHARED_POSTS_KEY,\n        gunPointer\n      })\n    ]);\n    console.log(\"Posts:\", rawPosts);\n    console.log(\"Shared Posts:\", rawSharedPosts);\n    const filteredRawPosts = Object.entries(rawPosts ?? {}).filter(\n      _filterGunProps\n    );\n    const filteredRawSharedPosts = Object.entries(rawSharedPosts ?? {}).filter(\n      _filterGunProps\n    );\n    const fetchedPosts = await Promise.all([\n      ...filteredRawPosts.map(([id], key) => getUserPost({ id, gunPointer })),\n      ...filteredRawSharedPosts.map(([id], key) =>\n        getSharedPost({\n          id,\n          sharedGunPointer: gunPointer\n        })\n      )\n    ]);\n\n    console.log(`User wall`, fetchedPosts);\n\n    const sortedPosts = fetchedPosts.sort((a, b) => b.date - a.date);\n\n    dispatch({\n      type: ACTIONS.LOAD_USER_WALL,\n      data: { posts: sortedPosts, page: 0 }\n    });\n\n    return fetchedPosts;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const updateUserProfile = data => dispatch => {\n  dispatch({\n    type: ACTIONS.UPDATE_USER_PROFILE,\n    data\n  });\n};\n\nexport const updateWallPost = data => dispatch => {\n  dispatch({\n    type: ACTIONS.UPDATE_WALL_POST,\n    data\n  });\n};\n\nexport const resetUserWall = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_USER_WALL\n  });\n};\n\nexport const resetUserData = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_USER_DATA\n  });\n};\n","import SEA from \"gun/sea\";\nimport {\n  Gun,\n  fetchPath,\n  setPath,\n  authUser,\n  $$__SHOCKWALLET__MSG__,\n  $$_SHOCKWALLET__ENCRYPTED__\n} from \"../utils/Gun\";\n\nexport const ACTIONS = {\n  LOAD_PAYMENT_REQUEST: \"paymentRequest/load\",\n  RESET_PAYMENT_REQUEST: \"paymentRequest/reset\"\n};\n\nexport const payUser = ({\n  senderPair,\n  recipientPublicKey,\n  amount,\n  metadata\n}) => async dispatch => {\n  const me = await authUser(senderPair.alias, senderPair.pass);\n  const recipientUser = Gun.user(recipientPublicKey);\n  const recipientUserEPub = await fetchPath({\n    path: \"epub\",\n    gunPointer: recipientUser\n  });\n\n  const secret = await SEA.secret(recipientUserEPub, me.sea);\n\n  const orderAddress = await fetchPath({\n    path: \"currentOrderAddress\",\n    gunPointer: recipientUser\n  });\n\n  console.log(\"Order Address:\", orderAddress);\n\n  const [encryptedAmount, encryptedMemo] = await Promise.all([\n    SEA.encrypt($$__SHOCKWALLET__MSG__ + amount.toString(), secret),\n    SEA.encrypt($$__SHOCKWALLET__MSG__ + \"Tipped user!\", secret)\n  ]);\n\n  const order = {\n    amount: $$_SHOCKWALLET__ENCRYPTED__ + encryptedAmount,\n    from: me.sea.pub,\n    memo: $$_SHOCKWALLET__ENCRYPTED__ + encryptedMemo,\n    timestamp: Date.now(),\n    // Tip type\n    ...metadata\n  };\n\n  console.log(\"Order:\", order);\n\n  const newOrder = await setPath({\n    path: `orderNodes/${orderAddress}`,\n    data: order\n  });\n  console.log(\"New Order:\", newOrder, newOrder._[\"#\"].split(\"/\").slice(-1)[0]);\n\n  const newOrderId = newOrder._[\"#\"].split(\"/\").slice(-1)[0];\n\n  console.log(\"New Order ID:\", newOrderId, `orderToResponse/${newOrderId}`);\n\n  await fetchPath({\n    path: `orderToResponse/${newOrderId}`,\n    gunPointer: Gun.user(recipientPublicKey),\n    method: \"on\"\n  });\n  const encryptedOrder = await fetchPath({\n    path: `orderToResponse/${newOrderId}`,\n    gunPointer: Gun.user(recipientPublicKey)\n  });\n\n  console.log(\n    \"Encrypted Order:\",\n    encryptedOrder.response,\n    encryptedOrder.response?.toString()\n  );\n\n  const decryptedResponse = await SEA.decrypt(\n    encryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\"),\n    secret\n  );\n\n  const decryptedOrder = {\n    response: decryptedResponse?.replace?.($$__SHOCKWALLET__MSG__, \"\"),\n    type: encryptedOrder.type\n  };\n\n  console.log(\"[ORDER] Decrypted order:\", decryptedOrder);\n\n  if (decryptedOrder.type === \"err\") {\n    throw {\n      field: \"order\",\n      message: \"An error has occurred while retrieving the order\",\n      data: decryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\")\n    };\n  }\n\n  dispatch({\n    type: ACTIONS.LOAD_PAYMENT_REQUEST,\n    data: decryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\")\n  });\n\n  return decryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\");\n};\n\nexport const resetPaymentRequest = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_PAYMENT_REQUEST\n  });\n};\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst Loader = ({ text = \"Loading...\" }) => (\n  <div className=\"loading-wall\">\n    <div className=\"loading-wall-icon\">\n      <span className=\"loading-circle loading-circle-1\"></span>\n      <span className=\"loading-circle loading-circle-2\"></span>\n      <span className=\"loading-circle loading-circle-3\"></span>\n      <span className=\"loading-circle loading-circle-4\"></span>\n      <span className=\"loading-circle loading-circle-5\"></span>\n    </div>\n    <div className=\"loading-wall-text\">{text}</div>\n  </div>\n);\n\nexport default Loader;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 38;","import { Gun, createRandomGunUser, fetchPath } from \"../utils/Gun\";\n\nexport const ACTIONS = {\n  LOAD_GUN_PAIR: \"auth/loadPair\"\n};\n\nexport const generateGunPair = () => async dispatch => {\n  const alias = localStorage.getItem(\"shocknet/gun/alias\");\n  const pass = localStorage.getItem(\"shocknet/gun/pass\");\n  const publicKey = localStorage.getItem(\"shocknet/gun/pub\");\n  const ePublicKey = localStorage.getItem(\"shocknet/gun/epub\");\n\n  if (!alias || !pass) {\n    console.log(\"[Gun] Keypair not found, generating a new one...\");\n\n    const randomUser = await createRandomGunUser();\n    localStorage.setItem(\"shocknet/gun/alias\", randomUser.alias);\n    localStorage.setItem(\"shocknet/gun/pass\", randomUser.pass);\n    localStorage.setItem(\"shocknet/gun/pub\", randomUser.pub);\n\n    const gunPointer = Gun.user(randomUser.pub);\n    const newUserEPublicKey = await fetchPath({\n      path: \"epub\",\n      gunPointer\n    });\n    localStorage.setItem(\"shocknet/gun/epub\", newUserEPublicKey);\n    dispatch({\n      type: ACTIONS.LOAD_GUN_PAIR,\n      data: randomUser\n    });\n    return;\n  }\n\n  console.log(\"[Gun] Keypair exists!\");\n\n  const user = {\n    pub: publicKey,\n    alias: alias,\n    epub: ePublicKey,\n    pass: pass\n  };\n\n  console.log(\"[Gun] User Authenticated\");\n\n  dispatch({\n    type: ACTIONS.LOAD_GUN_PAIR,\n    data: user\n  });\n\n  return user;\n};\n","import React, { Suspense } from \"react\";\nimport { withRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Tooltip from \"react-tooltip\";\nimport Loader from \"./common/Loader\";\nimport \"./styles/App.css\";\nimport \"./styles/video.js.css\";\n\nconst UserPage = React.lazy(() => import(\"./pages/User\"));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <Route path=\"/user/:userId\" component={UserPage} />\n          <Route path=\"/:userId\" component={UserPage} />\n          <Redirect to=\"/qsgziGQS99sPUxV1CRwwRckn9cG6cJ3prbDsrbL7qko.oRbCaVKwJFQURWrS1pFhkfAzrkEvkQgBRIUz9uoWtrg\" />\n        </Switch>\n      </Suspense>\n      <Tooltip backgroundColor=\"#3a4d67\" effect=\"solid\" />\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","import { ACTIONS } from \"../actions/UserActions\";\n\nconst INITIAL_STATE = {\n  wall: {\n    posts: [],\n    // Specifying -1 is helpful for determining whether or not\n    // the wall was loaded at all\n    page: -1,\n    totalPages: 0\n  },\n  profile: {}\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_USER_WALL: {\n      const { data } = action;\n      return {\n        ...state,\n        wall: {\n          ...state.wall,\n          posts: [...state.wall.posts, ...data.posts],\n          page: data.page\n        }\n      };\n    }\n    case ACTIONS.LOAD_USER_WALL_TOTAL_PAGES: {\n      const { data } = action;\n      console.log(\"Total pages:\", data);\n      return {\n        ...state,\n        wall: {\n          ...state.wall,\n          totalPages: data\n        }\n      };\n    }\n    case ACTIONS.LOAD_USER_DATA: {\n      const { data } = action;\n      return {\n        ...state,\n        profile: data\n      };\n    }\n    case ACTIONS.LOAD_USER_AVATAR: {\n      const { data } = action;\n      return {\n        ...state,\n        profile: {\n          ...state.profile,\n          avatar: data\n        }\n      };\n    }\n    case ACTIONS.UPDATE_USER_PROFILE: {\n      const { data } = action;\n      return {\n        ...state,\n        profile: {\n          ...state.profile,\n          ...data\n        }\n      };\n    }\n    case ACTIONS.UPDATE_WALL_POST: {\n      const { data: updatedPost } = action;\n      return {\n        ...state,\n        wall: {\n          ...state.wall,\n          posts: state.wall.posts.map(post =>\n            updatedPost.postID === post.id\n              ? {\n                  ...post,\n                  ...updatedPost.data\n                }\n              : post\n          )\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_WALL: {\n      return { ...state, wall: INITIAL_STATE.wall };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  pair: {}\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_GUN_PAIR: {\n      const { data } = action;\n      return {\n        ...state,\n        pair: data\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","import { ACTIONS } from \"../actions/TransactionActions\";\n\nconst INITIAL_STATE = {\n  paymentRequest: null\n};\n\nconst transaction = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_PAYMENT_REQUEST: {\n      const { data } = action;\n      return {\n        ...state,\n        paymentRequest: data\n      };\n    }\n    case ACTIONS.RESET_PAYMENT_REQUEST: {\n      return {\n        ...state,\n        paymentRequest: null\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default transaction;\n","import { combineReducers } from \"redux\";\nimport UserReducer from \"./UserReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport TransactionReducer from \"./TransactionReducer\";\n\nconst reducers = combineReducers({\n  user: UserReducer,\n  auth: AuthReducer,\n  transaction: TransactionReducer\n});\n\nexport default reducers;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst store = window.__REDUX_DEVTOOLS_EXTENSION__\n  ? createStore(\n      rootReducer,\n      compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__())\n    )\n  : createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Router basename=\"/\">\n        <App />\n      </Router>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}