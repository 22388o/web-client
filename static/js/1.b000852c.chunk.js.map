{"version":3,"sources":["common/Post/components/TipRibbon.js","common/Post/components/Video.js","common/Post/components/Image.js","common/Post/components/Stream.js","common/Post/components/ShareBtn.js","common/Post/index.js"],"names":["TipRibbon","tipCounter","tipValue","zoomed","className","style","opacity","Video","id","item","index","postId","videoRef","useRef","useState","playing","setPlaying","observe","useInView","trackVisibility","delay","onEnter","current","play","onLeave","pause","togglePlayingStatus","useCallback","updatedPlaying","console","log","videoHeight","useMemo","CSS","supports","aspectRatio","height","width","cursor","onClick","ref","classNames","data-torrent","magnetURI","data-file-key","alt","data-played","controls","Image","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","value","clearTimeout","timer","setTimeout","Controlled","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","src","decodeURIComponent","replace","onLoad","Stream","hideRibbon","playerDOM","unobserveOnEnter","inView","videoStyle","liveStatus","useEffect","player","videojs","autoplay","muted","type","display","preload","autoPlay","ShareBtn","publicKey","username","pinned","contentItems","copiedLink","setCopiedLink","url","media","filter","includes","map","file","supportedFormats","format","toLowerCase","endsWith","compatibleURL","match","sanitizedUrl","thumbnail","description","text","join","metadata","title","window","location","host","metadataBase64","btoa","JSON","stringify","sharePost","a","navigator","share","onCopy","getShareMessage","ReactTooltip","rebuild","timeout","tooltipId","data-tip","data-for","effect","backgroundColor","getContent","Post","timestamp","avatar","isOnlineNode","dispatch","useDispatch","useEmblaCarousel","slidesToScroll","align","draggable","carouselRef","carouselAPI","post","attachMedia","sliderLength","setSliderLength","activeSlide","setActiveSlide","setLiveStatus","viewersCounter","setViewersCounter","values","Object","videoContent","find","streamContent","status","parseContent","key","nextSlide","canScrollNext","scrollNext","prevSlide","canScrollPrev","scrollPrev","handleUserKeyDown","e","updateActiveSlide","selectedScrollSnap","fetchPath","path","gunPointer","gunUser","method","then","data","tipSet","lenSet","length","tot","reduce","acc","val","Number","updateWallPost","postID","on","scrollSnapList","addEventListener","removeEventListener","off","tipPost","openModal","targetType","ackInfo","Tooltip","to","backgroundImage","moment","utc","fromNow","entries","Array","from","_","scrollTo"],"mappings":"+RAYeA,EAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,OAAzB,OAChBD,EAAW,EACT,yBAAKE,UAAU,mBAAmBC,MAAO,CAAEC,QAAUH,EAAa,EAAJ,IAC5D,uBAAGC,UAAU,gBAAb,cACA,uBAAGA,UAAU,gBACVH,EADH,IAC+B,IAAfA,EAAmB,MAAQ,SAG3C,MC0FSM,G,cA7FD,SAAC,GAAsD,EAApDC,GAAqD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,MAAeR,GAA2B,EAAnCS,OAAmC,EAA3BT,UAAUD,EAAiB,EAAjBA,WAC5CW,EAAWC,mBADkD,EAErCC,oBAAS,GAF4B,mBAE5DC,EAF4D,KAEnDC,EAFmD,KAG3DC,EAAYC,YAAU,CAC5BC,iBAAiB,EACjBC,MAAO,IACPC,QAAS,WACHT,EAASU,UACXN,GAAW,GACXJ,EAASU,QAAQC,SAGrBC,QAAS,WACFZ,EAASU,UAIdN,GAAW,GACXJ,EAASU,QAAQG,YAfbR,QAmBFS,EAAsBC,uBAAY,WACtC,IAAMC,GAAkBb,EAExB,GADAC,EAAWY,GACPhB,EAASU,QAAS,CACpB,IAAKM,EAEH,YADAhB,EAASU,QAAQG,QAInBI,QAAQC,IAAI,gBAAiBF,GAC7BhB,EAASU,QAAQC,UAElB,CAACR,IAEEgB,EAAcC,mBAAQ,WAC1B,OAAIC,IAAIC,SAAS,wBACR,CACLC,YAAa,UAIV,CACLC,OAAQ,OAET,IAEH,OACE,yBAAKhC,UAAU,mBACb,yBACEA,UAAU,kBACVC,MAAK,aACHgC,MAAO,OACPC,OAAQ,WACLP,GAELQ,QAASb,EACTc,IAAKvB,GAEL,yBACEb,UAAWqC,IAAW,CACpB,uBAAuB,EACvB,eAAgB1B,KAGlB,yBAAKX,UAAU,YACb,uBAAGA,UAAU,iBAEf,yBACEA,UAAU,kBACVsC,eAAcjC,EAAKkC,UACnBC,gBAAelC,EACfmC,IAAI,qBAGR,2BACEzC,UAAWqC,IAAW,CACpB,2CAA2C,EAC3C,gBAAiB1B,IAEnB2B,eAAcjC,EAAKkC,UACnBC,gBAAelC,EACfoC,cAAY,QACZC,UAAQ,EACRP,IAAK5B,IAEP,kBAAC,EAAD,CAAWX,WAAYA,EAAYC,SAAUA,Q,SCxBtC8C,G,OA7DD,SAAC,GAAuD,IAArDxC,EAAoD,EAApDA,GAAIC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,OAAQT,EAA2B,EAA3BA,SAAUD,EAAiB,EAAjBA,WAAiB,EACvCa,oBAAS,GAD8B,mBAC5DX,EAD4D,KACpD8C,EADoD,OAE/BnC,oBAAS,GAFsB,mBAE5DoC,EAF4D,KAEhDC,EAFgD,OAGvBrC,oBAAS,GAHc,mBAG5DsC,EAH4D,KAG5CC,EAH4C,OAIvBvC,mBAAS,MAJc,mBAI5DwC,EAJ4D,KAI5CC,EAJ4C,KAM7DC,EAAmB7B,uBACvB,SAAA8B,GAGE,GAFAC,aAAaJ,GACbL,EAAUQ,IACLA,GAASP,EAAY,CACxBC,GAAc,GACd,IAAMQ,EAAQC,YAAW,WACvBP,GAAkB,KAfA,KAiBpBE,EAAkBI,GAGhBF,GACFJ,GAAkB,KAGtB,CAACC,EAAgBJ,IAGnB,OACE,yBAAK9C,UAAU,mBACb,kBAACyD,EAAA,EAAD,CACEC,SAAU3D,EACV4D,aAAcP,EACdQ,oBAAoB,YACpBC,kBAAkB,WAElB,yBACE7D,UAAS,kCAA6BO,EAA7B,YAAuCH,GAChDqC,IAAI,aACJH,eAAcjC,EAAKkC,UACnBC,gBAAelC,EACfwD,IAAKC,mBAAmB1D,EAAKkC,UAAUyB,QAAQ,YAAa,KAC5D/D,MAAO,CAAEC,QAAS8C,EAAiB,EAAI,KAEzC,yBACEhD,UAAS,oCAA+BO,EAA/B,YAAyCH,GAClDqC,IAAI,aACJD,gBAAelC,EACf2D,OAAQ,WACNlB,GAAc,IAEhB9C,MAAO,CAAEC,QAAS4C,EAAa,EAAI,GACnCgB,IAAKC,mBAAmB1D,EAAKkC,UAAUyB,QAAQ,YAAa,OAE9D,kBAAC,EAAD,CACEnE,WAAYA,EACZC,SAAUA,EACVC,OAAQA,Q,SCuBHmE,GAhFQ,UADO,mCACP,6BAER,SAAC,GASV,EARJ9D,GAQK,IAPLC,EAOI,EAPJA,KAGAP,GAII,EANJQ,MAMI,EALJC,OAKI,EAJJT,UACAD,EAGI,EAHJA,WACAsE,EAEI,EAFJA,WACAlC,EACI,EADJA,MAEMmC,EAAY3D,iBAAO,MADrB,EAEwBK,YAAU,CACpCC,iBAAiB,EACjBC,MAAO,IACPqD,kBAAkB,IAHJxD,GAFZ,EAEIyD,OAFJ,EAEYzD,SAFZ,EAOwBH,oBAAS,GAPjC,mBAQE6D,GARF,UAQe,CAAEtC,MAAO,SACxBA,IACFsC,EAAWtC,MAAQA,GAVjB,IAYGuC,EAAcnE,EAAdmE,WAiBP,OAhBAC,qBAAU,WACR,IAAMC,EAASC,YAAQP,EAAUlD,QAAS,CACxC0D,UAAU,EACVC,OAAO,EACP9C,YAAa,SAEf2C,EAAOZ,IAAI,CACTA,IAAKzD,EAAKkC,UACVuC,KAAM,0BAMRJ,EAAOvD,SACP,CAACd,IAED,yBAAKL,UAAU,yBACb,yBACEA,UAAU,wBACVC,MAAO,CACLiC,OAAQ,UACRD,MAAO,SAGO,YAAfuC,GAA4B,4DACb,YAAfA,GAA4B,kDAC3BA,GAAc,6DAChB,yBACEvE,MACiB,SAAfuE,EAAwB,CAAEvC,MAAO,QAAW,CAAE8C,QAAS,OAAQ9C,MAAO,QAExEG,IAAKvB,GAEL,2BACEb,UAAU,4BACVoC,IAAKgC,EACLnE,MAAOsE,EACPS,QAAQ,OACRrC,UAAQ,EACRkC,OAAK,EACLI,UAAQ,MAGVd,GACA,kBAAC,EAAD,CACEtE,WAAYA,EACZC,SAAUA,EACVC,QAAQ,Q,iDCgDLmF,EAzHE,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,UAAW/E,EAA8C,EAA9CA,GAAIgF,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,OAAgC,IAAxBC,oBAAwB,MAAT,GAAS,IACvC5E,oBAAS,GAD8B,mBACpE6E,EADoE,KACxDC,EADwD,KAErEC,EAAM7D,mBAAQ,WAClB,IAAM8D,EAAQJ,EACXK,QAAO,SAAAtF,GAAI,MAAI,CAAC,iBAAkB,kBAAkBuF,SAASvF,EAAKyE,SAClEe,KAAI,SAACxF,EAAMC,GAAW,IAAD,EACdwF,EAAOzF,EAAKkC,UAAUyB,QAAQ,YAAa,IAC3Cc,EAAOzE,EAAKyE,KAAKd,QAAQ,YAAa,IAFxB,EAGI+B,IAAiBJ,QAAO,SAAAK,GAAM,OACpDF,EAAKG,cAAcC,SAAnB,WAAgCF,EAAOC,mBADlCE,EAHa,oBAOpB,GAAIA,EACF,MAAO,CACLV,IAAKU,EACLrB,QAVgB,gBAelBzE,EAAKkC,UAAU6D,MAAM,wCAAyC,WAf5C,QAgBlB,GAFKX,EAda,oBAiBdY,EAAetC,mBAAkB,OAAC0B,QAAD,IAACA,IAAO,IAAIzB,QACjD,sBACA,IAKF,OAFAvC,QAAQC,IAAI,iBAAkB+D,EAAKY,GAE5B,CACLZ,IAAI,GAAD,OAAKY,EAAL,YAAqBvB,EAArB,YAA6BxE,EAA7B,QACHgG,UAAU,GAAD,OAAKD,EAAL,YAAqBvB,EAArB,YAA6BxE,EAA7B,cACTwE,WAIAyB,EACJjB,EACGK,QAAO,SAAAtF,GAAI,MAAkB,mBAAdA,EAAKyE,QACpBe,KAAI,SAAAxF,GAAI,OAAIA,EAAKmG,QACjBC,KAAK,OAHR,eAGyBrB,EAHzB,2BAKIsB,EAAW,CACfC,MAAM,WAAD,OAAavB,GAClBK,IAAI,WAAD,OAAamB,OAAOC,SAASC,KAA7B,YAAqC3B,EAArC,iBAAuD/E,GAC1D0E,KAAK,UACLY,QACAa,eAGIQ,EAAiBC,KAAKC,KAAKC,UAAUR,IAG3C,MAFe,kBAAcE,OAAOC,SAASC,KAA9B,YAAsC3B,EAAtC,iBAAwD/E,EAAxD,qBAAuE2G,KAGrF,CAACzB,EAAcF,EAAUD,EAAW/E,IAEjC+G,EAAY5F,sBAAW,sBAAC,sBAAA6F,EAAA,0DACxBC,UAAUC,MADc,uBAE1BD,UAAUC,MAAM,CACdd,KAAK,4BAAD,OAA8BpB,EAA9B,oBACJK,QAJwB,8DAQ3B,CAACL,EAAUK,IAER8B,EAAShG,uBAAY,WACzBiE,GAAc,KACb,IAEGgC,EAAkBjG,uBACtB,kBAAOgE,EAAa,oBAAsB,oBAC1C,CAACA,IAmBH,GAhBAd,qBAAU,WACRgD,IAAaC,UACb,IAAMC,EAAUnE,YAAW,WACzBgC,GAAc,GACdiC,IAAaC,YACZ,KAEH,OAAO,WACLpE,aAAaqE,MAEd,CAACpC,IAEJd,qBAAU,WACRgD,IAAaC,YACZ,KAEEL,UAAUC,MAAO,CACpB,IAAMM,EAAS,gBAAYzC,EAAZ,YAAyBE,EAAS,SAAW,GAA7C,YAAmDjF,GAClE,OACE,kBAAC,IAAD,CAAeoG,KAAMf,EAAK8B,OAAQA,GAChC,yBAAKvH,UAAU,uBACb,yBACEA,UAAU,YACV6H,WAAUL,IACVM,WAAUF,GAEV,uBAAG5H,UAAU,8BAEf,kBAAC,IAAD,CACE+H,OAAO,QACPC,gBAAgB,UAChBC,WAAY,CAACT,EAAiB,IAC9BpH,GAAIwH,MAOd,OACE,yBAAK5H,UAAU,YAAYmC,QAASgF,GAClC,uBAAGnH,UAAU,+BCqNJkI,UA5TF,SAAC,GAWP,IAVL9H,EAUI,EAVJA,GACA+H,EASI,EATJA,UACAC,EAQI,EARJA,OACAvI,EAOI,EAPJA,WACAC,EAMI,EANJA,SACAqF,EAKI,EALJA,UAKI,IAJJG,oBAII,MAJW,GAIX,EAHJF,EAGI,EAHJA,SACAiD,EAEI,EAFJA,aACAhD,EACI,EADJA,OAEMiD,EAAWC,cADb,EAE+BC,2BAAiB,CAClDC,eAAgB,EAChBC,MAAO,SACPC,WAAW,IALT,mBAEGC,EAFH,KAEgBC,EAFhB,KAOIhI,EAAYC,YAAU,CAC5BC,iBAAiB,EACjBsD,kBAAkB,EAClBpD,QAAS,WACP,IAAM6H,EAAO,CAAExD,eAAclF,MAC7B2I,YAAY,CAACD,IAAO,MALhBjI,QAPJ,EAgBoCH,mBAAS,GAhB7C,mBAgBGsI,EAhBH,KAgBiBC,EAhBjB,OAiBkCvI,mBAAS,GAjB3C,mBAiBGwI,EAjBH,KAiBgBC,EAjBhB,OAkBgCzI,mBAAS,IAlBzC,mBAkBG8D,EAlBH,KAkBe4E,EAlBf,OAmBwC1I,mBAAS,GAnBjD,mBAmBG2I,EAnBH,KAmBmBC,EAnBnB,KAsBJ7E,qBAAU,WACR,IAAM8E,EAASC,OAAOD,OAAOjE,GACvBmE,EAAeF,EAAOG,MAC1B,SAAArJ,GAAI,MAAkB,mBAAdA,EAAKyE,MAAiD,YAApBzE,EAAKmE,cAE3CmF,EAAgBJ,EAAOG,MAC3B,SAAArJ,GAAI,MAAkB,oBAAdA,EAAKyE,MAAkD,SAApBzE,EAAKmE,cAE9CoF,EAAS,GACTH,IACFG,EAAS,YAEPD,IACFC,EAAS,UACLD,EAAcN,gBAChBC,EAAkBK,EAAcN,iBAGhCO,GACFR,EAAcQ,KAEf,CAACtE,EAAc8D,IAElB,IAYMS,EAAe,SAAC,EAAavJ,GAAW,IAAD,mBAAtBwJ,EAAsB,KAAjBzJ,EAAiB,KAC3C,MAAkB,mBAAdA,EAAKyE,KACA,uBAAGgF,IAAKA,GAAMzJ,EAAKmG,MAGV,mBAAdnG,EAAKyE,KAEL,kBAAC,EAAD,CACE1E,GAAI0J,EACJzJ,KAAMA,EACNC,MAAOA,EACPC,OAAQH,EACRP,WAAYA,EACZC,SAAUA,EACVgK,IAAG,UAAK1J,EAAL,YAAWE,KAKF,mBAAdD,EAAKyE,KAEL,kBAAC,EAAD,CACE1E,GAAI0J,EACJzJ,KAAMA,EACNC,MAAOA,EACPC,OAAQH,EACRP,WAAYA,EACZC,SAAUA,EACVgK,IAAG,UAAK1J,EAAL,YAAWE,KAKF,oBAAdD,EAAKyE,KAEL,kBAAC,EAAD,CACE1E,GAAI0J,EACJzJ,KAAMA,EACNC,MAAOA,EACPC,OAAQH,EACRP,WAAYA,EACZC,SAAUA,EACVgK,IAAG,UAAK1J,EAAL,YAAWE,KAKb,MAGHyJ,EAAYxI,uBAAY,WACvBsH,GAEDA,EAAYmB,iBACdnB,EAAYoB,eAEb,CAACpB,IAEEqB,GAAY3I,uBAAY,WACvBsH,GAEDA,EAAYsB,iBACdtB,EAAYuB,eAEb,CAACvB,IAEEwB,GAAoB9I,uBACxB,SAAA+I,GACE,GAAqB,IAAjBtB,EAAJ,CADG,IAEKc,EAAQQ,EAARR,IAEI,eAARA,GACFC,IAGU,cAARD,GACFI,QAGJ,CAAClB,EAAckB,GAAWH,IAGtBQ,GAAoBhJ,uBAAY,WACpC4H,EAAeN,EAAY2B,wBAC1B,CAAC3B,EAAaM,IAEjB1E,qBAAU,WACRgG,YAAU,CACRC,KAAK,SAAD,OAAWtK,EAAX,YACJuK,WAAYC,YAAQzF,GACpB0F,OAAQ,SACPC,MAAK,SAAAC,GACN,IAAMC,EAASD,EAAOvB,OAAOD,OAAOwB,GAAQ,GACtCE,EAASD,EAAOE,OAChBC,EACJF,EAAS,EAAID,EAAOI,QAAO,SAACC,EAAKC,GAAN,OAAcC,OAAOD,GAAOC,OAAOF,MAAQ,EACxE/C,EACEkD,YAAe,CACbC,OAAQrL,EACR2K,KAAM,CACJjL,SAAUqL,EACVtL,WAAYoL,WAKnB,CAAC3C,EAAUlI,EAAI+E,IAElBV,qBAAU,WACR,GAAKoE,EAML,OAJAA,EAAY6C,GAAG,SAAUnB,IACzBtB,EAAgBJ,EAAY8C,iBAAiBT,QAC7CtE,OAAOgF,iBAAiB,UAAWvB,IAE5B,WACLzD,OAAOiF,oBAAoB,UAAWxB,IACtCxB,EAAYiD,IAAI,SAAUvB,OAE3B,CAAC1B,EAAaG,EAAcqB,GAAmBE,KAElD,IAAMwB,GAAUxK,uBAAY,WACrB8G,GAILC,EACE0D,YAAU,CACRC,WAAY,MACZC,QAAS9L,OAGZ,CAACkI,EAAUlI,EAAIiI,IAMlB,OAJA5D,qBAAU,WACR0H,IAAQzE,YACP,IAGD,yBAAK1H,UAAU,QACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CACEA,UAAU,KACVoM,GAAE,WAAMjH,GACRlF,MAAO,CACLoM,gBAAgB,OAAD,OAASjE,EAAT,QAGnB,yBAAKpI,UAAU,WACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAAMoM,GAAE,WAAMjH,IAAcC,GAC3BZ,GACC,uBAAGxE,UAAU,cACVwE,EACD,uBACExE,UAAS,uCACQ,YAAfwE,EAA2B,WAAa,MAG5B,YAAfA,GACC,oCAAU6E,EAAV,eAKR,2BAAIiD,IAAOC,IAAIpE,GAAWqE,aAG9B,kBAAC,EAAD,CACErH,UAAWA,EACX/E,GAAIA,EACJgF,SAAUA,EACVC,OAAQA,EACRC,aAAcA,KAIlB,yBAAKtF,UAAU,UAAUoC,IAAKvB,GAvLzB2I,OAAOiD,QAAQnH,GAAcK,QAClC,+CAA6B,mBAA7B,KAAoBb,QAuLAe,IAAIgE,GACtB,yBAAK7J,UAAU,0BACZgJ,EAAe,EACd,yBAAKhJ,UAAU,qCACb,yBACEA,UAAU,yCACVmC,QAAS+H,KAEX,yBAAKlK,UAAU,wBACZ0M,MAAMC,KAAK,CAAEzB,OAAQlC,IAAgBnD,KAAI,SAAC+G,EAAG9C,GAAJ,OACxC,yBACE9J,UAAWqC,IAAW,CACpB,uBAAuB,EACvB,uBAAwB6G,IAAgBY,IAE1C3H,QAAS,yBAAM0G,QAAN,IAAMA,OAAN,EAAMA,EAAagE,SAAS/C,UAI3C,yBACE9J,UAAU,0CACVmC,QAAS4H,KAGX,KACJ,yBAAK/J,UAAU,qBAAqBoC,IAAKwG,GACvC,yBAAK5I,UAAU,2BAxNhBwJ,OAAOiD,QAAQnH,GAAcK,QAClC,+CAA6B,mBAA7B,KAAoBb,QAwNOe,IAAIgE,OAM/B,yBAAK7J,UAAU,WACb,yBACEA,UAAU,eACV6H,WAAS,gBACT1F,QAAS4J,IAET,uBAAG/L,UAAU,6BAwBf,kBAAC,IAAD,CAASgI,gBAAgB,UAAUD,OAAO,c","file":"static/js/1.b000852c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import React, { useCallback, useMemo, useRef, useState } from \"react\";\nimport useInView from \"react-cool-inview\";\nimport classNames from \"classnames\";\nimport TipRibbon from \"./TipRibbon\";\nimport \"../../../styles/video.js.css\";\nimport \"../css/index.css\";\n\nconst Video = ({ id, item, index, postId, tipValue, tipCounter }) => {\n  const videoRef = useRef();\n  const [playing, setPlaying] = useState(false);\n  const { observe } = useInView({\n    trackVisibility: true,\n    delay: 100,\n    onEnter: () => {\n      if (videoRef.current) {\n        setPlaying(true);\n        videoRef.current.play();\n      }\n    },\n    onLeave: () => {\n      if (!videoRef.current) {\n        return;\n      }\n\n      setPlaying(false);\n      videoRef.current.pause();\n    }\n  });\n\n  const togglePlayingStatus = useCallback(() => {\n    const updatedPlaying = !playing;\n    setPlaying(updatedPlaying);\n    if (videoRef.current) {\n      if (!updatedPlaying) {\n        videoRef.current.pause();\n        return;\n      }\n\n      console.log(\"Playing video\", updatedPlaying);\n      videoRef.current.play();\n    }\n  }, [playing]);\n\n  const videoHeight = useMemo(() => {\n    if (CSS.supports(\"aspect-ratio: 16 / 9\")) {\n      return {\n        aspectRatio: \"16 / 9\"\n      };\n    }\n\n    return {\n      height: 400\n    };\n  }, []);\n\n  return (\n    <div className=\"media-container\">\n      <div\n        className=\"video-container\"\n        style={{\n          width: \"100%\",\n          cursor: \"pointer\",\n          ...videoHeight\n        }}\n        onClick={togglePlayingStatus}\n        ref={observe}\n      >\n        <div\n          className={classNames({\n            \"thumbnail-container\": true,\n            \"video-hidden\": playing\n          })}\n        >\n          <div className=\"play-btn\">\n            <i className=\"fas fa-play\" />\n          </div>\n          <img\n            className=\"video-thumbnail\"\n            data-torrent={item.magnetURI}\n            data-file-key={index}\n            alt=\"Video thumbnail\"\n          />\n        </div>\n        <video\n          className={classNames({\n            \"torrent-video video-js vjs-default-skin\": true,\n            \"video-hidden\": !playing\n          })}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          data-played=\"false\"\n          controls\n          ref={videoRef}\n        />\n        <TipRibbon tipCounter={tipCounter} tipValue={tipValue} />\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","import React, { useState } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"./TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"../css/index.css\";\nimport { useCallback } from \"react\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({ id, item, index, postId, tipValue, tipCounter }) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [animationTimer, zoomLoaded]\n  );\n\n  return (\n    <div className=\"media-container\">\n      <ControlledZoom\n        isZoomed={zoomed}\n        onZoomChange={handleZoomChange}\n        overlayBgColorStart=\"#16191c00\"\n        overlayBgColorEnd=\"#16191c\"\n      >\n        <img\n          className={`torrent-img torrent-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          src={decodeURIComponent(item.magnetURI.replace(/.*(ws=)/gi, \"\"))}\n          style={{ opacity: previewVisible ? 1 : 0 }}\n        />\n        <img\n          className={`enlarged-img enlarged-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-file-key={index}\n          onLoad={() => {\n            setZoomLoaded(true);\n          }}\n          style={{ opacity: zoomLoaded ? 1 : 0 }}\n          src={decodeURIComponent(item.magnetURI.replace(/.*(ws=)/gi, \"\"))}\n        />\n        <TipRibbon\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          zoomed={zoomed}\n        />\n      </ControlledZoom>\n    </div>\n  );\n};\n\nexport default Image;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport useInView from \"react-cool-inview\";\nimport TipRibbon from \"./TipRibbon\";\nimport videojs from \"video.js\";\n\nconst REACT_APP_SL_SEED_URI = \"https://webtorrent.shock.network\";\nconst STREAM_STATUS_URI = `${REACT_APP_SL_SEED_URI}/rtmpapi/api/streams/live`;\n\nconst Stream = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width\n}) => {\n  const playerDOM = useRef(null);\n  const { inView, observe } = useInView({\n    trackVisibility: true,\n    delay: 100,\n    unobserveOnEnter: true\n  });\n  const [isLive, setIsLive] = useState(false);\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  const {liveStatus} = item\n  useEffect(() =>{\n    const player = videojs(playerDOM.current, {\n      autoplay: true,\n      muted: true,\n      aspectRatio: \"16:9\"\n    });\n    player.src({\n      src: item.magnetURI,\n      type: \"application/x-mpegURL\"\n    });\n    //listen for 404s from the player\n    //player.tech().on('retryplaylist', () => {\n    //  console.log('retryplaylist');\n    //});\n    player.play();\n  },[item])\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {liveStatus === 'waiting' && <p>The stream did not start yet.</p>}\n        {liveStatus === 'wasLive' && <p>The stream is over</p>}\n        {!liveStatus && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            liveStatus === 'live' ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n          ref={observe}\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport CopyClipboard from \"react-copy-to-clipboard\";\nimport { supportedFormats } from \"../../../utils/Torrents\";\n\nconst ShareBtn = ({ publicKey, id, username, pinned, contentItems = [] }) => {\n  const [copiedLink, setCopiedLink] = useState(false);\n  const url = useMemo(() => {\n    const media = contentItems\n      .filter(item => [\"image/embedded\", \"video/embedded\"].includes(item.type))\n      .map((item, index) => {\n        const file = item.magnetURI.replace(/.*(ws=)/gi, \"\");\n        const type = item.type.replace(\"/embedded\", \"\");\n        const [compatibleURL] = supportedFormats.filter(format =>\n          file.toLowerCase().endsWith(`.${format.toLowerCase()}`)\n        );\n\n        if (compatibleURL) {\n          return {\n            url: compatibleURL,\n            type\n          };\n        }\n\n        const [url] =\n          item.magnetURI.match(/(?<=^magnet:\\?xs=)([\\w\\d]).*torrent/gi, \"\") ??\n          [];\n        const sanitizedUrl = decodeURIComponent(url ?? \"\").replace(\n          /\\/[\\w\\d]+.torrent/gi,\n          \"\"\n        );\n\n        console.log(\"Sanitized URL:\", url, sanitizedUrl);\n\n        return {\n          url: `${sanitizedUrl}/${type}-${index}.mp4`,\n          thumbnail: `${sanitizedUrl}/${type}-${index}-thumb.png`,\n          type\n        };\n      });\n\n    const description =\n      contentItems\n        .filter(item => item.type === \"text/paragraph\")\n        .map(item => item.text)\n        .join(\"\\n\") || `View ${username}'s posts on ShockWallet`;\n\n    const metadata = {\n      title: `Post by ${username}`,\n      url: `https://${window.location.host}/${publicKey}/post/${id}`,\n      type: `website`,\n      media,\n      description\n    };\n\n    const metadataBase64 = btoa(JSON.stringify(metadata));\n    const shareLink = `https://${window.location.host}/${publicKey}/post/${id}?metadata=${metadataBase64}`;\n\n    return shareLink;\n  }, [contentItems, username, publicKey, id]);\n\n  const sharePost = useCallback(async () => {\n    if (navigator.share) {\n      navigator.share({\n        text: `Check out this post from ${username} on ShockWallet!`,\n        url\n      });\n      return;\n    }\n  }, [username, url]);\n\n  const onCopy = useCallback(() => {\n    setCopiedLink(true);\n  }, []);\n\n  const getShareMessage = useCallback(\n    () => (copiedLink ? \"Post link copied!\" : \"Share this post\"),\n    [copiedLink]\n  );\n\n  useEffect(() => {\n    ReactTooltip.rebuild();\n    const timeout = setTimeout(() => {\n      setCopiedLink(false);\n      ReactTooltip.rebuild();\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [copiedLink]);\n\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  }, []);\n\n  if (!navigator.share) {\n    const tooltipId = `share-${publicKey}-${pinned ? \"pinned\" : \"\"}-${id}`;\n    return (\n      <CopyClipboard text={url} onCopy={onCopy}>\n        <div className=\"share-btn-container\">\n          <div\n            className=\"share-btn\"\n            data-tip={getShareMessage()}\n            data-for={tooltipId}\n          >\n            <i className=\"fas fa-external-link-alt\"></i>\n          </div>\n          <ReactTooltip\n            effect=\"solid\"\n            backgroundColor=\"#3a4d67\"\n            getContent={[getShareMessage, 30]}\n            id={tooltipId}\n          />\n        </div>\n      </CopyClipboard>\n    );\n  }\n\n  return (\n    <div className=\"share-btn\" onClick={sharePost}>\n      <i className=\"fas fa-external-link-alt\"></i>\n    </div>\n  );\n};\n\nexport default ShareBtn;\n","import React, { useEffect, useCallback, useState } from \"react\";\nimport moment from \"moment\";\nimport Tooltip from \"react-tooltip\";\nimport { useDispatch } from \"react-redux\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport useInView from \"react-cool-inview\";\nimport { updateWallPost } from \"../../actions/UserActions\";\nimport { openModal } from \"../../actions/TipActions\";\nimport { gunUser, fetchPath } from \"../../utils/Gun\";\nimport Video from \"./components/Video\";\nimport Image from \"./components/Image\";\nimport Stream from \"./components/Stream\";\nimport ShareBtn from \"./components/ShareBtn\";\nimport \"./css/index.css\";\nimport { attachMedia } from \"../../utils/Torrents\";\n\nconst Post = ({\n  id,\n  timestamp,\n  avatar,\n  tipCounter,\n  tipValue,\n  publicKey,\n  contentItems = {},\n  username,\n  isOnlineNode,\n  pinned\n}) => {\n  const dispatch = useDispatch();\n  const [carouselRef, carouselAPI] = useEmblaCarousel({\n    slidesToScroll: 1,\n    align: \"center\",\n    draggable: false\n  });\n  const { observe } = useInView({\n    trackVisibility: false,\n    unobserveOnEnter: true,\n    onEnter: () => {\n      const post = { contentItems, id };\n      attachMedia([post], false);\n    }\n  });\n\n  const [sliderLength, setSliderLength] = useState(0);\n  const [activeSlide, setActiveSlide] = useState(0);\n  const [liveStatus, setLiveStatus] = useState(\"\");\n  const [viewersCounter, setViewersCounter] = useState(0);\n\n  //effect for liveStatus and viewers counter\n  useEffect(() => {\n    const values = Object.values(contentItems);\n    const videoContent = values.find(\n      item => item.type === \"video/embedded\" && item.liveStatus === \"wasLive\"\n    );\n    const streamContent = values.find(\n      item => item.type === \"stream/embedded\" && item.liveStatus === \"live\"\n    );\n    let status = \"\";\n    if (videoContent) {\n      status = \"was Live\";\n    }\n    if (streamContent) {\n      status = \"is Live\";\n      if (streamContent.viewersCounter) {\n        setViewersCounter(streamContent.viewersCounter);\n      }\n    }\n    if (status) {\n      setLiveStatus(status);\n    }\n  }, [contentItems, setLiveStatus]);\n\n  const getMediaContent = () => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type !== \"text/paragraph\"\n    );\n  };\n\n  const getTextContent = () => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type === \"text/paragraph\"\n    );\n  };\n\n  const parseContent = ([key, item], index) => {\n    if (item.type === \"text/paragraph\") {\n      return <p key={key}>{item.text}</p>;\n    }\n\n    if (item.type === \"image/embedded\") {\n      return (\n        <Image\n          id={key}\n          item={item}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n        />\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <Video\n          id={key}\n          item={item}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n        />\n      );\n    }\n\n    if (item.type === \"stream/embedded\") {\n      return (\n        <Stream\n          id={key}\n          item={item}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  const nextSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollNext()) {\n      carouselAPI.scrollNext();\n    }\n  }, [carouselAPI]);\n\n  const prevSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollPrev()) {\n      carouselAPI.scrollPrev();\n    }\n  }, [carouselAPI]);\n\n  const handleUserKeyDown = useCallback(\n    e => {\n      if (sliderLength === 0) return;\n      const { key } = e;\n\n      if (key === \"ArrowRight\") {\n        nextSlide();\n      }\n\n      if (key === \"ArrowLeft\") {\n        prevSlide();\n      }\n    },\n    [sliderLength, prevSlide, nextSlide]\n  );\n\n  const updateActiveSlide = useCallback(() => {\n    setActiveSlide(carouselAPI.selectedScrollSnap());\n  }, [carouselAPI, setActiveSlide]);\n\n  useEffect(() => {\n    fetchPath({\n      path: `posts/${id}/tipsSet`,\n      gunPointer: gunUser(publicKey),\n      method: \"load\"\n    }).then(data => {\n      const tipSet = data ? Object.values(data) : [];\n      const lenSet = tipSet.length;\n      const tot =\n        lenSet > 0 ? tipSet.reduce((acc, val) => Number(val) + Number(acc)) : 0;\n      dispatch(\n        updateWallPost({\n          postID: id,\n          data: {\n            tipValue: tot,\n            tipCounter: lenSet\n          }\n        })\n      );\n    });\n  }, [dispatch, id, publicKey]);\n\n  useEffect(() => {\n    if (!carouselAPI) return;\n\n    carouselAPI.on(\"scroll\", updateActiveSlide);\n    setSliderLength(carouselAPI.scrollSnapList().length);\n    window.addEventListener(\"keydown\", handleUserKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyDown);\n      carouselAPI.off(\"scroll\", updateActiveSlide);\n    };\n  }, [carouselAPI, sliderLength, handleUserKeyDown, updateActiveSlide]);\n\n  const tipPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    dispatch(\n      openModal({\n        targetType: \"tip\",\n        ackInfo: id\n      })\n    );\n  }, [dispatch, id, isOnlineNode]);\n\n  useEffect(() => {\n    Tooltip.rebuild();\n  }, []);\n\n  return (\n    <div className=\"post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <Link\n            className=\"av\"\n            to={`/${publicKey}`}\n            style={{\n              backgroundImage: `url(${avatar})`\n            }}\n          />\n          <div className=\"details\">\n            <div className=\"username\">\n              <Link to={`/${publicKey}`}>{username}</Link>\n              {liveStatus && (\n                <p className=\"liveStatus\">\n                  {liveStatus}\n                  <i\n                    className={`fas fa-circle liveStatusIcon ${\n                      liveStatus === \"is Live\" ? \"liveIcon\" : \"\"\n                    }`}\n                  ></i>\n                  {liveStatus === \"is Live\" && (\n                    <span> | {viewersCounter} watching</span>\n                  )}\n                </p>\n              )}\n            </div>\n            <p>{moment.utc(timestamp).fromNow()}</p>\n          </div>\n        </div>\n        <ShareBtn\n          publicKey={publicKey}\n          id={id}\n          username={username}\n          pinned={pinned}\n          contentItems={contentItems}\n        />\n      </div>\n\n      <div className=\"content\" ref={observe}>\n        {getTextContent().map(parseContent)}\n        <div className=\"media-content-carousel\">\n          {sliderLength > 1 ? (\n            <div className=\"media-carousel-controls-container\">\n              <div\n                className=\"media-carousel-arrow fas fa-angle-left\"\n                onClick={prevSlide}\n              ></div>\n              <div className=\"media-carousel-pages\">\n                {Array.from({ length: sliderLength }).map((_, key) => (\n                  <div\n                    className={classNames({\n                      \"media-carousel-page\": true,\n                      \"active-carousel-page\": activeSlide === key\n                    })}\n                    onClick={() => carouselAPI?.scrollTo(key)}\n                  ></div>\n                ))}\n              </div>\n              <div\n                className=\"media-carousel-arrow fas fa-angle-right\"\n                onClick={nextSlide}\n              ></div>\n            </div>\n          ) : null}\n          <div className=\"media-content-root\" ref={carouselRef}>\n            <div className=\"media-content-container\">\n              {getMediaContent().map(parseContent)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"actions\">\n        <div\n          className=\"icon-tip-btn\"\n          data-tip=\"Tip this post\"\n          onClick={tipPost}\n        >\n          <i className=\"tip-icon icon-thin-feed\"></i>\n        </div>\n        {/* <div\n          className=\"tip-btn-container\"\n          onClick={tipPost}\n          data-tip={\n            isOnlineNode\n              ? tipCounter > 0\n                ? `${tipValue} Sats tipped so far`\n                : null\n              : \"You can only tip online users\"\n          }\n          style={{\n            opacity: isOnlineNode ? 1 : 0.5,\n            cursor: isOnlineNode ? \"pointer\" : \"default\"\n          }}\n        >\n          <div className=\"tip-btn-icon\">\n            <img src={lightning} alt=\"Send Tip\" />\n          </div>\n          <div className=\"tip-btn-text\">\n            <Counter value={tipCounter} /> {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n          </div>\n        </div> */}\n        <Tooltip backgroundColor=\"#3a4d67\" effect=\"solid\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n"],"sourceRoot":""}