{"version":3,"sources":["utils/Gun.js","actions/UserActions.js","actions/TipActions.js","common/DownloadBtn/index.js","App.js","reducers/UserReducer.js","reducers/AuthReducer.js","reducers/TipReducer.js","reducers/index.js","store/index.js","serviceWorker.js","index.js","utils/Prerender.js","common/Loader/index.js","../node_modules/gun sync","actions/AuthActions.js"],"names":["peersConfig","data","JSON","parse","err","safeParse","process","PEERS","peers","wait","ms","Promise","resolve","reject","setTimeout","_randomString","length","randomString","randomChar","n","Math","floor","random","String","fromCharCode","_filterGunProps","key","_isIncompleteGunResponse","console","log","undefined","Array","isArray","reduce","empty","item","stringifiedData","stringify","filteredGunProps","Object","entries","filter","warn","parseGunPath","path","gunPointer","node","Gun","split","get","GunDB","axe","window","gun","fetchPath","retryDelay","retryLimit","retryCondition","method","_retryCount","_fallbackResult","parsedRetryLimit","isCrawler","parsedRetryDelay","GunContext","event","a","retryResult","setPath","response","set","listenPath","callback","on","createRandomGunUser","randomAlias","randomPass","user","create","error","field","message","_error","_event","alias","pass","authUser","auth","gunUser","publicKey","Error","$$_SHOCKWALLET__ENCRYPTED__","$$__SHOCKWALLET__MSG__","ACTIONS","LOAD_USER_WALL","LOAD_USER_WALL_TOTAL_PAGES","RESET_USER_WALL","PIN_WALL_POST","UPDATE_WALL_POST","RESET_USER_DATA","LOAD_USER_DATA","LOAD_USER_AVATAR","UPDATE_USER_PROFILE","getUserAvatar","dispatch","avatar","type","getUserHeader","header","fetchUserProfile","includeAvatar","all","bio","displayName","lastSeenApp","lastSeenNode","getUserProfile","getUserPost","id","res","load","x","loadedPost","contentItems","mapValues","ci","magnetURI","liveStatus","playbackMagnet","width","height","getSharedPost","sharedPostKey","sharedPost","date","shareDate","originalAuthor","getUserWall","rawPosts","rawSharedPosts","filteredRawPosts","filteredRawSharedPosts","map","fetchedPosts","sortedPosts","sort","b","posts","page","getPinnedPost","postId","post","updateUserProfile","updateWallPost","resetUserWall","resetUserData","LOAD_PAYMENT_REQUEST","RESET_PAYMENT_REQUEST","OPEN_TIP_MODAL","CLOSE_TIP_MODAL","UPDATE_METADATA","openModal","metadata","closeModal","payUser","senderPair","recipientPublicKey","amount","me","recipientUser","recipientUserEPub","SEA","secret","sea","orderAddress","encrypt","toString","encryptedAmount","encryptedMemo","order","from","pub","memo","timestamp","Date","now","newOrder","_","slice","newOrderId","encryptedOrder","decrypt","replace","decryptedResponse","decryptedOrder","paymentRequest","ackNode","DownloadBtn","href","target","rel","className","UserPage","React","lazy","PostPage","withRouter","Helmet","property","content","location","fallback","Loader","component","to","INITIAL_STATE","wall","totalPages","profile","state","action","updatedPost","postID","pinnedPost","pinned","pair","LOAD_GUN_PAIR","tip","modalOpen","reducers","combineReducers","UserReducer","AuthReducer","TipReducer","store","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","compose","applyMiddleware","thunk","Boolean","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","userAgent","includes","text","webpackEmptyContext","req","e","code","keys","module","exports","generateGunPair","localStorage","getItem","ePublicKey","randomUser","setItem","newUserEPublicKey","epub"],"mappings":"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","file":"static/js/main.7fdc73eb.chunk.js","sourcesContent":["import GunDB from \"gun/gun\";\nimport \"gun/sea\";\nimport \"gun/lib/load\";\nimport { isCrawler } from \"./Prerender\";\n\nconst safeParse = (data) => {\n  try {\n    return JSON.parse(data);\n  } catch (err) {\n    return null;\n  }\n};\n\nconst peersConfig = safeParse(process.env.PEERS);\n\nconst peers = peersConfig\n  ? peersConfig\n  : [\"https://gun.shock.network/gun\", \"https://gun-eu.shock.network/gun\"];\n\nconst wait = (ms) =>\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(true);\n    }, ms);\n  });\n\nconst _randomString = (length) => {\n  let randomString = \"\";\n  const randomChar = function () {\n    const n = Math.floor(Math.random() * 62);\n    if (n < 10) return n; //1-10\n    if (n < 36) return String.fromCharCode(n + 55); //A-Z\n    return String.fromCharCode(n + 61); //a-z\n  };\n  while (randomString.length < length) randomString += randomChar();\n  return randomString;\n};\n\nconst _filterGunProps = ([key, item]) => item && key !== \"_\" && key !== \"#\";\n\nconst _isIncompleteGunResponse = (data) => {\n  try {\n    console.log(\"Incomplete Gun Response Check:\", typeof data, data);\n    if (data === null || data === undefined) {\n      return true;\n    }\n\n    if (Array.isArray(data)) {\n      if (!data.length) {\n        return true;\n      }\n\n      const incompleteCollection = data.reduce((empty, item) => {\n        if (empty) {\n          return empty;\n        }\n\n        return _isIncompleteGunResponse(item);\n      });\n\n      return incompleteCollection;\n    }\n\n    if (typeof data === \"object\") {\n      if (!data || typeof data.err === \"number\") {\n        return true;\n      }\n\n      const stringifiedData = JSON.stringify(data);\n      console.log(data, stringifiedData);\n\n      if (stringifiedData === \"{}\") {\n        return true;\n      }\n\n      const filteredGunProps = Object.entries(data).filter(_filterGunProps);\n\n      console.log(filteredGunProps, filteredGunProps?.length);\n\n      if (!filteredGunProps?.length) {\n        return true;\n      }\n    }\n\n    return false;\n  } catch (err) {\n    console.warn(\"An error has occurred:\", err);\n    return true;\n  }\n};\n\nconst parseGunPath = ({ path, gunPointer = Gun }) => {\n  let node = gunPointer;\n\n  for (const key of path.split(\"/\")) {\n    node = node.get(key);\n  }\n\n  return node;\n};\n\nexport const Gun = GunDB({ axe: false, peers: peers });\n\nwindow.gun = Gun;\n\nexport const fetchPath = ({\n  path = \"\",\n  retryDelay = 500,\n  retryLimit = 3,\n  retryCondition = _isIncompleteGunResponse,\n  gunPointer = Gun,\n  method = \"once\",\n\n  _retryCount = 0,\n  _fallbackResult,\n}) =>\n  new Promise((resolve) => {\n    const parsedRetryLimit = isCrawler() ? 1 : retryLimit;\n    const parsedRetryDelay = isCrawler() ? 200 : retryDelay;\n\n    if (_retryCount > parsedRetryLimit) {\n      resolve(_fallbackResult);\n      return;\n    }\n    if (_retryCount > 0) {\n      console.log(\n        \"Retrying event:\",\n        path,\n        `${_retryCount}/${parsedRetryLimit}`\n      );\n    }\n    const GunContext = parseGunPath({ path, gunPointer });\n    console.log(\"Fetching Path:\", path, GunContext);\n\n    GunContext[method](async (event) => {\n      console.log(path + \" Response:\", event);\n      if (retryCondition && retryCondition(event)) {\n        await wait(parsedRetryDelay);\n        const retryResult = await fetchPath({\n          path,\n          retryDelay: parsedRetryDelay,\n          retryLimit: parsedRetryLimit,\n          retryCondition,\n          gunPointer,\n\n          _retryCount: _retryCount + 1,\n          _fallbackResult: event,\n        });\n        resolve(retryResult);\n        return;\n      }\n\n      resolve(event);\n    });\n  });\n\n// Wraps GunDB data callbacks to provide better error handling\nexport const wrap = (callback) => (event) => {\n  console.log(\"Event received!\", event);\n  if (event?.err) {\n    console.error(\"[GunDB] Event error:\", event?.err, event);\n  }\n\n  if (!event?.put) {\n    console.warn(\"[GunDB] Item not found:\", event?.put, event);\n  }\n\n  return callback(\n    event,\n    event.err || !event.put\n      ? {\n          field: !event.put ? \"key\" : \"unknown\",\n          message: event.err\n            ? event.err\n            : !event.put\n            ? \"Key not found\"\n            : \"Unknown\",\n          gunErr: event.err,\n        }\n      : null\n  );\n};\n\nexport const putPath = ({ path = \"\", data = {}, gunPointer = Gun }) =>\n  new Promise((resolve, reject) => {\n    const GunContext = parseGunPath({ path, gunPointer });\n    GunContext.put(\n      data,\n      wrap((event, err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(event);\n      })\n    );\n  });\n\nexport const setPath = ({ path = \"\", data = {}, gunPointer = Gun }) =>\n  new Promise((resolve, reject) => {\n    const GunContext = parseGunPath({ path, gunPointer });\n    const response = GunContext.set(data, (event) => {\n      console.log(data);\n      resolve(response);\n    });\n  });\n\nexport const listenPath = ({ path = \"\", gunPointer = Gun, callback }) => {\n  const GunContext = parseGunPath({ path, gunPointer });\n  return GunContext.on((event) => {\n    callback(event);\n  });\n};\n\nexport const createRandomGunUser = () =>\n  new Promise((resolve, reject) => {\n    const randomAlias = _randomString(10);\n    const randomPass = _randomString(10);\n    Gun.user().create(randomAlias, randomPass, (event) => {\n      if (event.err) {\n        console.error(\"An error has occurred while initializing a new user\");\n        reject({\n          field: \"gundb\",\n          message: \"An error has occurred while initializing a new user\",\n          _error: event.err,\n          _event: event,\n        });\n        return;\n      }\n      resolve({ ...event, alias: randomAlias, pass: randomPass });\n    });\n  });\n\nexport const authUser = (alias, pass) =>\n  new Promise((resolve, reject) => {\n    Gun.user().auth(alias, pass, (user) => {\n      resolve(user);\n    });\n  });\n\nexport const gunUser = (publicKey) => {\n  console.log(\"Getting Gun User:\", publicKey);\n  if (!publicKey) {\n    throw new Error(\"Undefined public key\");\n  }\n  return Gun.user(publicKey);\n};\n\n// Magic number provided from GunDB docs\nexport const DEFAULT_ONCE_WAIT_MS = 99;\n\nexport const $$_SHOCKWALLET__ENCRYPTED__ = \"$$_SHOCKWALLET__ENCRYPTED__\";\n\nexport const $$__SHOCKWALLET__MSG__ = \"$$__SHOCKWALLET__MSG__\";\n","import mapValues from \"lodash/mapValues\";\n\nimport { Gun, fetchPath } from \"../utils/Gun\";\n\nexport const ACTIONS = {\n  LOAD_USER_WALL: \"wall/load\",\n  LOAD_USER_WALL_TOTAL_PAGES: \"wall/loadTotalPages\",\n  RESET_USER_WALL: \"wall/reset\",\n  PIN_WALL_POST: \"wall/pin\",\n  UPDATE_WALL_POST: \"wall/post/update\",\n  RESET_USER_DATA: \"user/reset\",\n  LOAD_USER_DATA: \"user/load\",\n  LOAD_USER_AVATAR: \"avatar/load\",\n  UPDATE_USER_PROFILE: \"user/update\",\n};\n\nconst _filterGunProps = ([key, item]) => item && key !== \"_\" && key !== \"#\";\n\nconst GUN_POSTS_KEY = `posts`;\nconst GUN_SHARED_POSTS_KEY = `sharedPosts`;\n\nexport const getUserAvatar = (publicKey) => async (dispatch) => {\n  const avatar = await fetchPath({\n    path: \"~\" + publicKey + \"/\" + \"profileBinary/avatar\",\n  });\n\n  dispatch({\n    type: ACTIONS.UPDATE_USER_PROFILE,\n    data: { avatar },\n  });\n\n  return avatar;\n};\n\nexport const getUserHeader = (publicKey) => async (dispatch) => {\n  const gunUser = Gun.user(publicKey);\n  const header = await fetchPath({\n    path: \"~\" + publicKey + \"/\" + \"profileBinary/header\",\n  });\n\n  dispatch({\n    type: ACTIONS.UPDATE_USER_PROFILE,\n    data: { header },\n  });\n\n  return header;\n};\n\nexport const fetchUserProfile = async ({\n  publicKey,\n  includeAvatar = false,\n}) => {\n  const [bio, displayName, alias, lastSeenApp, lastSeenNode, avatar] =\n    await Promise.all([\n      fetchPath({\n        path: \"~\" + publicKey + \"/\" + \"Profile/bio\",\n      }),\n      fetchPath({\n        path: \"~\" + publicKey + \"/\" + \"Profile/displayName\",\n      }),\n      fetchPath({\n        path: \"~\" + publicKey + \"/\" + \"alias\",\n      }),\n      fetchPath({\n        path: \"~\" + publicKey + \"/\" + \"Profile/lastSeenApp\",\n      }),\n      fetchPath({\n        path: \"~\" + publicKey + \"/\" + \"Profile/lastSeenNode\",\n      }),\n      includeAvatar\n        ? fetchPath({\n            path: \"~\" + publicKey + \"/\" + \"profileBinary/avatar\",\n          })\n        : undefined,\n    ]);\n\n  const user = {\n    publicKey,\n    bio,\n    displayName,\n    alias,\n    lastSeenNode,\n    lastSeenApp,\n    avatar,\n  };\n\n  return user;\n};\n\nexport const getUserProfile = (publicKey) => async (dispatch) => {\n  const user = await fetchUserProfile({ publicKey });\n\n  console.log(\"User:\", user);\n\n  dispatch({\n    type: ACTIONS.LOAD_USER_DATA,\n    data: user,\n  });\n\n  return user;\n};\n\nexport const getUserPost = async ({ id, publicKey }) => {\n  const loadedPost = await new Promise((res) =>\n    Gun.user(publicKey)\n      .get(\"posts\")\n      .get(id)\n      .load((x) => res(x), { wait: 1000 })\n  );\n\n  loadedPost.contentItems = mapValues(loadedPost.contentItems, (ci) => {\n    if (ci.type !== \"stream/embedded\") {\n      return ci;\n    }\n\n    return {\n      ...ci,\n      magnetURI:\n        ci.liveStatus === \"wasLive\" && ci.playbackMagnet\n          ? ci.playbackMagnet\n          : ci.magnetURI,\n      type:\n        ci.liveStatus === \"wasLive\" && ci.playbackMagnet\n          ? \"video/embedded\"\n          : ci.type,\n      width: 0,\n      height: 0,\n    };\n  });\n\n  return {\n    ...(loadedPost ?? {}),\n    id,\n    type: \"post\",\n  };\n};\n\nexport const getSharedPost = async ({ id, publicKey }) => {\n  const sharedPostKey = `${GUN_SHARED_POSTS_KEY}/${id}`;\n\n  const sharedPost = await fetchPath({\n    path: \"~\" + publicKey + \"/\" + sharedPostKey,\n    retryLimit: 5,\n    retryDelay: 1000,\n  });\n\n  return {\n    id,\n    date: sharedPost.shareDate,\n    originalAuthor: sharedPost.originalAuthor,\n    type: \"shared\",\n  };\n};\n\nexport const getUserWall = (publicKey) => async (dispatch) => {\n  try {\n    const [rawPosts, rawSharedPosts] = await Promise.all([\n      fetchPath({\n        path: \"~\" + publicKey + \"/\" + GUN_POSTS_KEY,\n        retryLimit: 5,\n        retryDelay: 1000,\n      }),\n      fetchPath({\n        path: \"~\" + publicKey + \"/\" + GUN_SHARED_POSTS_KEY,\n      }),\n    ]);\n    console.log(\"Posts:\", rawPosts);\n    console.log(\"Shared Posts:\", rawSharedPosts);\n    const filteredRawPosts = Object.entries(rawPosts ?? {})\n      .filter(([, val]) => !!val)\n      .filter(_filterGunProps);\n    const filteredRawSharedPosts = Object.entries(rawSharedPosts ?? {})\n      .filter(([, val]) => !!val)\n      .filter(_filterGunProps);\n    const fetchedPosts = await Promise.all([\n      ...filteredRawPosts.map(([id]) => getUserPost({ id, publicKey })),\n      ...filteredRawSharedPosts.map(([id]) =>\n        getSharedPost({\n          id,\n          publicKey,\n        })\n      ),\n    ]);\n\n    console.log(`User wall`, fetchedPosts);\n\n    const sortedPosts = fetchedPosts.sort((a, b) => b.date - a.date);\n\n    dispatch({\n      type: ACTIONS.LOAD_USER_WALL,\n      data: { posts: sortedPosts, page: 0 },\n    });\n\n    return fetchedPosts;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getPinnedPost =\n  ({ publicKey, postId, type = \"post\" }) =>\n  async (dispatch) => {\n    console.log(\"Getting Pinned post:\", publicKey, postId, type);\n\n    if (!publicKey || !postId) {\n      return;\n    }\n\n    if (type === \"post\") {\n      const post = await getUserPost({ id: postId, publicKey });\n\n      if (post) {\n        dispatch({\n          type: ACTIONS.PIN_WALL_POST,\n          data: post,\n        });\n      }\n\n      return post;\n    }\n\n    if (type === \"sharedPost\") {\n      const post = await getSharedPost({\n        id: \"~\" + publicKey + \"/\" + postId,\n      });\n\n      if (post) {\n        dispatch({\n          type: ACTIONS.PIN_WALL_POST,\n          data: post,\n        });\n      }\n\n      return post;\n    }\n  };\n\nexport const updateUserProfile = (data) => (dispatch) => {\n  dispatch({\n    type: ACTIONS.UPDATE_USER_PROFILE,\n    data,\n  });\n};\n\nexport const updateWallPost = (data) => (dispatch) => {\n  dispatch({\n    type: ACTIONS.UPDATE_WALL_POST,\n    data,\n  });\n};\n\nexport const resetUserWall = () => (dispatch) => {\n  dispatch({\n    type: ACTIONS.RESET_USER_WALL,\n  });\n};\n\nexport const resetUserData = () => (dispatch) => {\n  dispatch({\n    type: ACTIONS.RESET_USER_DATA,\n  });\n};\n","import SEA from \"gun/sea\";\nimport {\n  Gun,\n  fetchPath,\n  setPath,\n  authUser,\n  $$__SHOCKWALLET__MSG__,\n  $$_SHOCKWALLET__ENCRYPTED__\n} from \"../utils/Gun\";\n\nexport const ACTIONS = {\n  LOAD_PAYMENT_REQUEST: \"tip/paymentRequest/load\",\n  RESET_PAYMENT_REQUEST: \"tip/paymentRequest/reset\",\n  OPEN_TIP_MODAL: \"tip/modal/open\",\n  CLOSE_TIP_MODAL: \"tip/modal/close\",\n  UPDATE_METADATA: \"tip/metadata/update\"\n};\n\nexport const openModal = metadata => ({\n  type: ACTIONS.OPEN_TIP_MODAL,\n  data: metadata\n});\n\nexport const closeModal = () => ({\n  type: ACTIONS.CLOSE_TIP_MODAL\n});\n\nexport const updateMetadata = metadata => ({\n  type: ACTIONS.UPDATE_METADATA,\n  data: metadata\n});\n\nexport const payUser =\n  ({ senderPair, recipientPublicKey, amount, metadata }) =>\n  async dispatch => {\n    const me = await authUser(senderPair.alias, senderPair.pass);\n    const recipientUser = Gun.user(recipientPublicKey);\n    const recipientUserEPub = await fetchPath({\n      path: \"epub\",\n      gunPointer: recipientUser\n    });\n\n    const secret = await SEA.secret(recipientUserEPub, me.sea);\n\n    const orderAddress = await fetchPath({\n      path: \"currentOrderAddress\",\n      gunPointer: recipientUser\n    });\n\n    console.log(\"Order Address:\", orderAddress);\n\n    const [encryptedAmount, encryptedMemo] = await Promise.all([\n      SEA.encrypt($$__SHOCKWALLET__MSG__ + amount.toString(), secret),\n      SEA.encrypt($$__SHOCKWALLET__MSG__ + \"Tipped user!\", secret)\n    ]);\n\n    const order = {\n      amount: $$_SHOCKWALLET__ENCRYPTED__ + encryptedAmount,\n      from: me.sea.pub,\n      memo: $$_SHOCKWALLET__ENCRYPTED__ + encryptedMemo,\n      timestamp: Date.now(),\n      // Tip type\n      ...metadata\n    };\n\n    console.log(\"Order:\", order);\n\n    const newOrder = await setPath({\n      path: `orderNodes/${orderAddress}`,\n      data: order\n    });\n    console.log(\n      \"New Order:\",\n      newOrder,\n      newOrder._[\"#\"].split(\"/\").slice(-1)[0]\n    );\n\n    const newOrderId = newOrder._[\"#\"].split(\"/\").slice(-1)[0];\n\n    console.log(\"New Order ID:\", newOrderId, `orderToResponse/${newOrderId}`);\n\n    await fetchPath({\n      path: `orderToResponse/${newOrderId}`,\n      gunPointer: Gun.user(recipientPublicKey),\n      method: \"on\"\n    });\n    const encryptedOrder = await fetchPath({\n      path: `orderToResponse/${newOrderId}`,\n      gunPointer: Gun.user(recipientPublicKey)\n    });\n\n    console.log(\n      \"Encrypted Order:\",\n      encryptedOrder.response,\n      encryptedOrder.response?.toString()\n    );\n\n    const decryptedResponse = await SEA.decrypt(\n      encryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\"),\n      secret\n    );\n\n    const decryptedOrder = {\n      response: decryptedResponse?.replace?.($$__SHOCKWALLET__MSG__, \"\"),\n      type: encryptedOrder.type\n    };\n\n    console.log(\"[ORDER] Decrypted order:\", decryptedOrder);\n\n    if (decryptedOrder.type === \"err\") {\n      throw {\n        field: \"order\",\n        message: \"An error has occurred while retrieving the order\",\n        data: decryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\")\n      };\n    }\n\n    dispatch({\n      type: ACTIONS.LOAD_PAYMENT_REQUEST,\n      data: decryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\")\n    });\n\n    return {paymentRequest:decryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\"), ackNode:encryptedOrder.ackNode};\n  };\n\nexport const resetPaymentRequest = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_PAYMENT_REQUEST\n  });\n};\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst DownloadBtn = () => {\n  return (\n    <a\n      href=\"https://My.Lightning.Page\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      className=\"download-shockwallet-btn\"\n    >\n      <i className=\"download-shockwallet-btn-icon fas fa-user\"></i>\n      <p className=\"download-shockwallet-btn-text\">Create a Lightning Page</p>\n    </a>\n  );\n};\n\nexport default DownloadBtn;\n","import React, { Suspense } from \"react\";\nimport { withRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Loader from \"./common/Loader\";\nimport DownloadBtn from \"./common/DownloadBtn\";\nimport \"./styles/App.css\";\nimport { Helmet } from \"react-helmet\";\n\nconst UserPage = React.lazy(() => import(\"./pages/User\"));\nconst PostPage = React.lazy(() => import(\"./pages/Post\"));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta property=\"twitter:site\" content=\"@shocknet\" />\n        <meta property=\"twitter:card\" content=\"summary\" />\n        <meta property=\"og:url\" content={window.location.href} />\n        <meta property=\"og:type\" content=\"website\" />\n      </Helmet>\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <Route path=\"/user/:userId\" component={UserPage} />\n          <Route path=\"/:userId/:type/:postId\" component={PostPage} />\n          <Route path=\"/:userId\" component={UserPage} />\n          <Redirect to=\"/tcUUzRkyzXYhIZQbmopiCLREyZ_kQJqQ-C4XesecOm4.GX1Dv-eGcfKuOPobBK9Q-Sc-o697XgVCQzOCfqfimIo\" />\n        </Switch>\n      </Suspense>\n      <DownloadBtn />\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","import { ACTIONS } from \"../actions/UserActions\";\n\nconst INITIAL_STATE = {\n  wall: {\n    posts: [],\n    // Specifying -1 is helpful for determining whether or not\n    // the wall was loaded at all\n    page: -1,\n    totalPages: 0\n  },\n  profile: {}\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_USER_WALL: {\n      const { data } = action;\n      return {\n        ...state,\n        wall: {\n          ...state.wall,\n          posts: [...state.wall.posts, ...data.posts],\n          page: data.page\n        }\n      };\n    }\n    case ACTIONS.LOAD_USER_WALL_TOTAL_PAGES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        wall: {\n          ...state.wall,\n          totalPages: data\n        }\n      };\n    }\n    case ACTIONS.LOAD_USER_DATA: {\n      const { data } = action;\n      return {\n        ...state,\n        profile: data\n      };\n    }\n    case ACTIONS.LOAD_USER_AVATAR: {\n      const { data } = action;\n      return {\n        ...state,\n        profile: {\n          ...state.profile,\n          avatar: data\n        }\n      };\n    }\n    case ACTIONS.UPDATE_USER_PROFILE: {\n      const { data } = action;\n      return {\n        ...state,\n        profile: {\n          ...state.profile,\n          ...data\n        }\n      };\n    }\n    case ACTIONS.UPDATE_WALL_POST: {\n      const { data: updatedPost } = action;\n      return {\n        ...state,\n        wall: {\n          ...state.wall,\n          posts: state.wall.posts.map(post =>\n            updatedPost.postID === post.id\n              ? {\n                  ...post,\n                  ...updatedPost.data\n                }\n              : post\n          )\n        }\n      };\n    }\n    case ACTIONS.PIN_WALL_POST: {\n      const { data } = action;\n      return {\n        ...state,\n        wall: {\n          ...state.wall,\n          pinnedPost: { ...data, pinned: true }\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_WALL: {\n      return { ...state, wall: INITIAL_STATE.wall };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  pair: {}\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_GUN_PAIR: {\n      const { data } = action;\n      return {\n        ...state,\n        pair: data\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","import { ACTIONS } from \"../actions/TipActions\";\n\nconst INITIAL_STATE = {\n  paymentRequest: null\n};\n\nconst tip = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_PAYMENT_REQUEST: {\n      const { data } = action;\n      return {\n        ...state,\n        paymentRequest: data\n      };\n    }\n    case ACTIONS.RESET_PAYMENT_REQUEST: {\n      return {\n        ...state,\n        paymentRequest: null\n      };\n    }\n    case ACTIONS.OPEN_TIP_MODAL: {\n      const { data } = action;\n\n      return {\n        ...state,\n        modalOpen: true,\n        metadata: data\n      };\n    }\n    case ACTIONS.CLOSE_TIP_MODAL: {\n      return {\n        ...state,\n        modalOpen: false,\n        metadata: {}\n      };\n    }\n    case ACTIONS.UPDATE_METADATA: {\n      const { data } = action;\n\n      return {\n        ...state,\n        metadata: data\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tip;\n","import { combineReducers } from \"redux\";\nimport UserReducer from \"./UserReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport TipReducer from \"./TipReducer\";\n\nconst reducers = combineReducers({\n  user: UserReducer,\n  auth: AuthReducer,\n  tip: TipReducer\n});\n\nexport default reducers;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst store = window.__REDUX_DEVTOOLS_EXTENSION__\n  ? createStore(\n      rootReducer,\n      compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__())\n    )\n  : createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Router basename=\"/\">\n        <App />\n      </Router>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const isCrawler = () => navigator.userAgent.includes(\"Prerender\");\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst Loader = ({ text = \"Loading...\" }) => (\n  <div className=\"loading-wall\">\n    <div className=\"loading-wall-icon\">\n      <span className=\"loading-circle loading-circle-1\"></span>\n      <span className=\"loading-circle loading-circle-2\"></span>\n      <span className=\"loading-circle loading-circle-3\"></span>\n      <span className=\"loading-circle loading-circle-4\"></span>\n      <span className=\"loading-circle loading-circle-5\"></span>\n    </div>\n    <div className=\"loading-wall-text\">{text}</div>\n  </div>\n);\n\nexport default Loader;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 71;","import { Gun, createRandomGunUser, fetchPath } from \"../utils/Gun\";\n\nexport const ACTIONS = {\n  LOAD_GUN_PAIR: \"auth/loadPair\"\n};\n\nexport const generateGunPair = () => async dispatch => {\n  const alias = localStorage.getItem(\"shocknet/gun/alias\");\n  const pass = localStorage.getItem(\"shocknet/gun/pass\");\n  const publicKey = localStorage.getItem(\"shocknet/gun/pub\");\n  const ePublicKey = localStorage.getItem(\"shocknet/gun/epub\");\n\n  if (!alias || !pass) {\n    console.log(\"[Gun] Keypair not found, generating a new one...\");\n\n    const randomUser = await createRandomGunUser();\n    localStorage.setItem(\"shocknet/gun/alias\", randomUser.alias);\n    localStorage.setItem(\"shocknet/gun/pass\", randomUser.pass);\n    localStorage.setItem(\"shocknet/gun/pub\", randomUser.pub);\n\n    const gunPointer = Gun.user(randomUser.pub);\n    const newUserEPublicKey = await fetchPath({\n      path: \"epub\",\n      gunPointer\n    });\n    localStorage.setItem(\"shocknet/gun/epub\", newUserEPublicKey);\n    dispatch({\n      type: ACTIONS.LOAD_GUN_PAIR,\n      data: randomUser\n    });\n    return;\n  }\n\n  console.log(\"[Gun] Keypair exists!\");\n\n  const user = {\n    pub: publicKey,\n    alias: alias,\n    epub: ePublicKey,\n    pass: pass\n  };\n\n  console.log(\"[Gun] User Authenticated\");\n\n  dispatch({\n    type: ACTIONS.LOAD_GUN_PAIR,\n    data: user\n  });\n\n  return user;\n};\n"],"sourceRoot":""}