{"version":3,"sources":["utils/Gun.js","actions/UserActions.js","actions/TransactionActions.js","common/Loader/index.js","../node_modules/gun sync","actions/AuthActions.js","App.js","reducers/UserReducer.js","reducers/AuthReducer.js","reducers/TransactionReducer.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["peersConfig","data","JSON","parse","err","safeParse","process","PEERS","peers","wait","ms","Promise","resolve","reject","setTimeout","_randomString","length","randomString","randomChar","n","Math","floor","random","String","fromCharCode","_filterGunProps","key","_isIncompleteGunResponse","console","log","undefined","Array","isArray","reduce","empty","item","stringifiedData","stringify","filteredGunProps","Object","entries","filter","warn","parseGunPath","path","gunPointer","split","gun","get","Gun","GunDB","fetchPath","retryDelay","retryLimit","retryCondition","method","_retryCount","_fallbackResult","event","a","retryResult","setPath","response","set","listenPath","callback","on","createRandomGunUser","randomAlias","randomPass","user","create","error","field","message","_error","_event","alias","pass","authUser","auth","gunUser","publicKey","$$_SHOCKWALLET__ENCRYPTED__","$$__SHOCKWALLET__MSG__","ACTIONS","LOAD_USER_WALL","LOAD_USER_WALL_TOTAL_PAGES","RESET_USER_WALL","UPDATE_WALL_POST","RESET_USER_DATA","LOAD_USER_DATA","LOAD_USER_AVATAR","UPDATE_USER_PROFILE","getUserAvatar","dispatch","avatar","type","getUserHeader","header","fetchUserProfile","includeAvatar","all","bio","displayName","lastSeenApp","lastSeenNode","getUserProfile","getUserPost","id","wallPost","contentItemsKey","contentItems","filteredContentItems","map","text","magnetURI","width","height","fetchedContentItems","getUserWall","rawPosts","filteredRawPosts","fetchedPosts","sortedPosts","sort","b","date","posts","page","updateUserProfile","updateWallPost","resetUserWall","resetUserData","LOAD_PAYMENT_REQUEST","RESET_PAYMENT_REQUEST","payUser","senderPair","recipientPublicKey","amount","metadata","me","recipientUser","recipientUserEPub","SEA","secret","sea","orderAddress","encrypt","toString","encryptedAmount","encryptedMemo","order","from","pub","memo","timestamp","Date","now","newOrder","_","slice","newOrderId","encryptedOrder","decrypt","replace","decryptedResponse","decryptedOrder","resetPaymentRequest","Loader","className","webpackEmptyContext","req","e","Error","code","keys","module","exports","LOAD_GUN_PAIR","generateGunPair","localStorage","getItem","ePublicKey","randomUser","setItem","newUserEPublicKey","epub","UserPage","React","lazy","withRouter","fallback","component","to","backgroundColor","effect","INITIAL_STATE","wall","totalPages","profile","state","action","updatedPost","post","postID","pair","paymentRequest","transaction","reducers","combineReducers","UserReducer","AuthReducer","TransactionReducer","store","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","compose","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.25a925eb.chunk.js","sourcesContent":["import GunDB from \"gun/gun\";\nimport \"gun/sea\";\nimport \"gun/lib/load\";\n\nconst safeParse = data => {\n  try {\n    return JSON.parse(data);\n  } catch (err) {\n    return null;\n  }\n};\n\nconst peersConfig = safeParse(process.env.PEERS);\n\nconst peers = peersConfig\n  ? peersConfig\n  : [\n      \"https://gun.shock.network:8765/gun\"\n      // \"http://gun2.shock.network:8765/gun\"\n    ];\n\nconst wait = ms =>\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(true);\n    }, ms);\n  });\n\nconst _randomString = length => {\n  let randomString = \"\";\n  const randomChar = function () {\n    const n = Math.floor(Math.random() * 62);\n    if (n < 10) return n; //1-10\n    if (n < 36) return String.fromCharCode(n + 55); //A-Z\n    return String.fromCharCode(n + 61); //a-z\n  };\n  while (randomString.length < length) randomString += randomChar();\n  return randomString;\n};\n\nconst _filterGunProps = ([key, item]) => item && key !== \"_\" && key !== \"#\";\n\nconst _isIncompleteGunResponse = data => {\n  try {\n    console.log(\"Incomplete Gun Response Check:\", typeof data, data);\n    if (data === null || data === undefined) {\n      return true;\n    }\n\n    if (Array.isArray(data)) {\n      if (!data.length) {\n        return true;\n      }\n\n      const incompleteCollection = data.reduce((empty, item) => {\n        if (empty) {\n          return empty;\n        }\n\n        return _isIncompleteGunResponse(item);\n      });\n\n      return incompleteCollection;\n    }\n\n    if (typeof data === \"object\") {\n      if (!data || typeof data.err === \"number\") {\n        return true;\n      }\n\n      const stringifiedData = JSON.stringify(data);\n      console.log(data, stringifiedData);\n\n      if (stringifiedData === \"{}\") {\n        return true;\n      }\n\n      const filteredGunProps = Object.entries(data).filter(_filterGunProps);\n\n      console.log(filteredGunProps, filteredGunProps?.length);\n\n      if (!filteredGunProps?.length) {\n        return true;\n      }\n    }\n\n    return false;\n  } catch (err) {\n    console.warn(\"An error has occurred:\", err);\n    return true;\n  }\n};\n\nconst parseGunPath = ({ path, gunPointer }) =>\n  path.split(\"/\").reduce((gun, path) => gun.get(path), gunPointer);\n\nexport const Gun = GunDB(peers);\n\nexport const fetchPath = ({\n  path = \"\",\n  retryDelay = 500,\n  retryLimit = 3,\n  retryCondition = _isIncompleteGunResponse,\n  gunPointer = Gun,\n  method = \"once\",\n\n  _retryCount = 0,\n  _fallbackResult\n}) =>\n  new Promise(resolve => {\n    if (_retryCount > retryLimit) {\n      resolve(_fallbackResult);\n      return;\n    }\n    if (_retryCount > 0) {\n      console.log(\"Retrying event:\", path, `${_retryCount}/${retryLimit}`);\n    }\n    const GunContext = parseGunPath({ path, gunPointer });\n    GunContext[method](async event => {\n      console.log(path + \" Response:\", event);\n      if (retryCondition && retryCondition(event)) {\n        await wait(retryDelay);\n        const retryResult = await fetchPath({\n          path,\n          retryDelay,\n          retryLimit,\n          retryCondition,\n          gunPointer,\n\n          _retryCount: _retryCount + 1,\n          _fallbackResult: event\n        });\n        resolve(retryResult);\n        return;\n      }\n\n      resolve(event);\n    });\n  });\n\n// Wraps GunDB data callbacks to provide better error handling\nexport const wrap = callback => event => {\n  console.log(\"Event received!\", event);\n  if (event?.err) {\n    console.error(\"[GunDB] Event error:\", event?.err, event);\n  }\n\n  if (!event?.put) {\n    console.warn(\"[GunDB] Item not found:\", event?.put, event);\n  }\n\n  return callback(\n    event,\n    event.err || !event.put\n      ? {\n          field: !event.put ? \"key\" : \"unknown\",\n          message: event.err\n            ? event.err\n            : !event.put\n            ? \"Key not found\"\n            : \"Unknown\",\n          gunErr: event.err\n        }\n      : null\n  );\n};\n\nexport const putPath = ({ path = \"\", data = {}, gunPointer = Gun }) =>\n  new Promise((resolve, reject) => {\n    const GunContext = parseGunPath({ path, gunPointer });\n    GunContext.put(\n      data,\n      wrap((event, err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(event);\n      })\n    );\n  });\n\nexport const setPath = ({ path = \"\", data = {}, gunPointer = Gun }) =>\n  new Promise((resolve, reject) => {\n    const GunContext = parseGunPath({ path, gunPointer });\n    const response = GunContext.set(data, event => {\n      console.log(data);\n      resolve(response);\n    });\n  });\n\nexport const listenPath = ({ path = \"\", gunPointer = Gun, callback }) => {\n  const GunContext = parseGunPath({ path, gunPointer });\n  return GunContext.on(event => {\n    callback(event);\n  });\n};\n\nexport const createRandomGunUser = () =>\n  new Promise((resolve, reject) => {\n    const randomAlias = _randomString(10);\n    const randomPass = _randomString(10);\n    Gun.user().create(randomAlias, randomPass, event => {\n      if (event.err) {\n        console.error(\"An error has occurred while initializing a new user\");\n        reject({\n          field: \"gundb\",\n          message: \"An error has occurred while initializing a new user\",\n          _error: event.err,\n          _event: event\n        });\n        return;\n      }\n      resolve({ ...event, alias: randomAlias, pass: randomPass });\n    });\n  });\n\nexport const authUser = (alias, pass) =>\n  new Promise((resolve, reject) => {\n    Gun.user().auth(alias, pass, user => {\n      resolve(user);\n    });\n  });\n\nexport const gunUser = publicKey => Gun.user(publicKey);\n\n// Magic number provided from GunDB docs\nexport const DEFAULT_ONCE_WAIT_MS = 99;\n\nexport const $$_SHOCKWALLET__ENCRYPTED__ = \"$$_SHOCKWALLET__ENCRYPTED__\";\n\nexport const $$__SHOCKWALLET__MSG__ = \"$$__SHOCKWALLET__MSG__\";\n","import { Gun, fetchPath } from \"../utils/Gun\";\n\nexport const ACTIONS = {\n  LOAD_USER_WALL: \"wall/load\",\n  LOAD_USER_WALL_TOTAL_PAGES: \"wall/loadTotalPages\",\n  RESET_USER_WALL: \"wall/reset\",\n  UPDATE_WALL_POST: \"wallPost/update\",\n  RESET_USER_DATA: \"user/reset\",\n  LOAD_USER_DATA: \"user/load\",\n  LOAD_USER_AVATAR: \"avatar/load\",\n  UPDATE_USER_PROFILE: \"user/update\"\n};\n\nconst _filterGunProps = ([key, item]) => item && key !== \"_\" && key !== \"#\";\n\nconst GUN_POSTS_KEY = `posts`;\n\nexport const getUserAvatar = publicKey => async dispatch => {\n  const gunUser = Gun.user(publicKey);\n  const avatar = await fetchPath({\n    path: \"profileBinary/avatar\",\n    gunPointer: gunUser\n  });\n\n  dispatch({\n    type: ACTIONS.UPDATE_USER_PROFILE,\n    data: { avatar }\n  });\n\n  return avatar;\n};\n\nexport const getUserHeader = publicKey => async dispatch => {\n  const gunUser = Gun.user(publicKey);\n  const header = await fetchPath({\n    path: \"profileBinary/header\",\n    gunPointer: gunUser\n  });\n\n  dispatch({\n    type: ACTIONS.UPDATE_USER_PROFILE,\n    data: { header }\n  });\n\n  return header;\n};\n\nexport const fetchUserProfile = async ({\n  publicKey,\n  includeAvatar = false\n}) => {\n  const gunUser = Gun.user(publicKey);\n  const [\n    bio,\n    displayName,\n    alias,\n    lastSeenApp,\n    lastSeenNode,\n    avatar\n  ] = await Promise.all([\n    fetchPath({\n      path: \"Profile/bio\",\n      gunPointer: gunUser\n    }),\n    fetchPath({\n      path: \"Profile/displayName\",\n      gunPointer: gunUser\n    }),\n    fetchPath({\n      path: \"alias\",\n      gunPointer: gunUser\n    }),\n    fetchPath({\n      path: \"Profile/lastSeenApp\",\n      gunPointer: gunUser\n    }),\n    fetchPath({\n      path: \"Profile/lastSeenNode\",\n      gunPointer: gunUser\n    }),\n    includeAvatar\n      ? fetchPath({\n          path: \"profileBinary/avatar\",\n          gunPointer: gunUser\n        })\n      : null\n  ]);\n\n  const user = {\n    bio,\n    displayName,\n    alias,\n    lastSeenNode,\n    lastSeenApp,\n    avatar\n  };\n\n  return user;\n};\n\nexport const getUserProfile = publicKey => async dispatch => {\n  const user = await fetchUserProfile({ publicKey });\n\n  console.log(\"User:\", user);\n\n  dispatch({\n    type: ACTIONS.LOAD_USER_DATA,\n    data: user\n  });\n\n  return user;\n};\n\nexport const getWallTotalPages = publicKey => async dispatch => {\n  const totalPages = await fetchPath({\n    path: \"wall/numOfPages\",\n    gunPointer: Gun.user(publicKey)\n  });\n\n  if (!totalPages && totalPages !== 0) {\n    throw {\n      field: \"publicKey\",\n      message: \"Wall was not found for the specified user\"\n    };\n  }\n\n  dispatch({\n    type: ACTIONS.LOAD_USER_WALL_TOTAL_PAGES,\n    data: totalPages\n  });\n\n  return totalPages;\n};\n\nexport const getUserPost = async ({ id, gunPointer }) => {\n  const wallPost = await fetchPath({\n    path: `${GUN_POSTS_KEY}/${id}`,\n    gunPointer,\n    retryLimit: 5,\n    retryDelay: 1000\n  });\n  const contentItemsKey = `${GUN_POSTS_KEY}/${id}/contentItems`;\n  const contentItems = await fetchPath({\n    path: contentItemsKey,\n    gunPointer,\n    retryLimit: 5,\n    retryDelay: 500\n  });\n  const filteredContentItems = Object.entries(contentItems).filter(\n    _filterGunProps\n  );\n  const fetchedContentItems = await Promise.all(\n    filteredContentItems.map(async ([id]) => {\n      const type = await fetchPath({\n        path: `${contentItemsKey}/${id}/type`,\n        gunPointer\n      });\n\n      if (type === \"text/paragraph\") {\n        const text = await fetchPath({\n          path: `${contentItemsKey}/${id}/text`,\n          gunPointer\n        });\n        return {\n          text,\n          type\n        };\n      }\n\n      if (type === \"video/embedded\") {\n        const [magnetURI, width, height] = await Promise.all([\n          fetchPath({\n            path: `${contentItemsKey}/${id}/magnetURI`,\n            gunPointer\n          }),\n          fetchPath({\n            path: `${contentItemsKey}/${id}/width`,\n            gunPointer\n          }),\n          fetchPath({\n            path: `${contentItemsKey}/${id}/height`,\n            gunPointer\n          })\n        ]);\n        return {\n          magnetURI,\n          width,\n          height,\n          type\n        };\n      }\n\n      if (type === \"image/embedded\") {\n        const [magnetURI, width, height] = await Promise.all([\n          fetchPath({\n            path: `${contentItemsKey}/${id}/magnetURI`,\n            gunPointer\n          }),\n          fetchPath({\n            path: `${contentItemsKey}/${id}/width`,\n            gunPointer\n          }),\n          fetchPath({\n            path: `${contentItemsKey}/${id}/height`,\n            gunPointer\n          })\n        ]);\n        return {\n          magnetURI,\n          width,\n          height,\n          type\n        };\n      }\n\n      return {\n        text: \"Unsupported media type\",\n        type\n      };\n    })\n  );\n\n  return {\n    ...(wallPost ?? {}),\n    id,\n    contentItems: fetchedContentItems ?? []\n  };\n};\n\nexport const getUserWall = publicKey => async dispatch => {\n  try {\n    const gunPointer = Gun.user(publicKey);\n    const rawPosts = await fetchPath({\n      path: GUN_POSTS_KEY,\n      gunPointer,\n      retryLimit: 5,\n      retryDelay: 1000\n    });\n    console.log(\"Posts:\", rawPosts);\n    const filteredRawPosts = Object.entries(rawPosts ?? {}).filter(\n      _filterGunProps\n    );\n    const fetchedPosts = await Promise.all(\n      filteredRawPosts.map(([id], key) => getUserPost({ id, gunPointer }))\n    );\n\n    console.log(`User wall`, fetchedPosts);\n\n    const sortedPosts = fetchedPosts?.sort((a, b) => b.date - a.date);\n\n    dispatch({\n      type: ACTIONS.LOAD_USER_WALL,\n      data: { posts: sortedPosts, page: 0 }\n    });\n\n    return fetchedPosts;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const updateUserProfile = data => dispatch => {\n  dispatch({\n    type: ACTIONS.UPDATE_USER_PROFILE,\n    data\n  });\n};\n\nexport const updateWallPost = data => dispatch => {\n  dispatch({\n    type: ACTIONS.UPDATE_WALL_POST,\n    data\n  });\n};\n\nexport const resetUserWall = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_USER_WALL\n  });\n};\n\nexport const resetUserData = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_USER_DATA\n  });\n};\n","import SEA from \"gun/sea\";\nimport {\n  Gun,\n  fetchPath,\n  setPath,\n  authUser,\n  $$__SHOCKWALLET__MSG__,\n  $$_SHOCKWALLET__ENCRYPTED__\n} from \"../utils/Gun\";\n\nexport const ACTIONS = {\n  LOAD_PAYMENT_REQUEST: \"paymentRequest/load\",\n  RESET_PAYMENT_REQUEST: \"paymentRequest/reset\"\n};\n\nexport const payUser = ({\n  senderPair,\n  recipientPublicKey,\n  amount,\n  metadata\n}) => async dispatch => {\n  const me = await authUser(senderPair.alias, senderPair.pass);\n  const recipientUser = Gun.user(recipientPublicKey);\n  const recipientUserEPub = await fetchPath({\n    path: \"epub\",\n    gunPointer: recipientUser\n  });\n\n  const secret = await SEA.secret(recipientUserEPub, me.sea);\n\n  const orderAddress = await fetchPath({\n    path: \"currentOrderAddress\",\n    gunPointer: recipientUser\n  });\n\n  console.log(\"Order Address:\", orderAddress);\n\n  const [encryptedAmount, encryptedMemo] = await Promise.all([\n    SEA.encrypt($$__SHOCKWALLET__MSG__ + amount.toString(), secret),\n    SEA.encrypt($$__SHOCKWALLET__MSG__ + \"Tipped user!\", secret)\n  ]);\n\n  const order = {\n    amount: $$_SHOCKWALLET__ENCRYPTED__ + encryptedAmount,\n    from: me.sea.pub,\n    memo: $$_SHOCKWALLET__ENCRYPTED__ + encryptedMemo,\n    timestamp: Date.now(),\n    // Tip type\n    ...metadata\n  };\n\n  console.log(\"Order:\", order);\n\n  const newOrder = await setPath({\n    path: `orderNodes/${orderAddress}`,\n    data: order\n  });\n  console.log(\"New Order:\", newOrder, newOrder._[\"#\"].split(\"/\").slice(-1)[0]);\n\n  const newOrderId = newOrder._[\"#\"].split(\"/\").slice(-1)[0];\n\n  console.log(\"New Order ID:\", newOrderId, `orderToResponse/${newOrderId}`);\n\n  await fetchPath({\n    path: `orderToResponse/${newOrderId}`,\n    gunPointer: Gun.user(recipientPublicKey),\n    method: \"on\"\n  });\n  const encryptedOrder = await fetchPath({\n    path: `orderToResponse/${newOrderId}`,\n    gunPointer: Gun.user(recipientPublicKey)\n  });\n\n  console.log(\n    \"Encrypted Order:\",\n    encryptedOrder.response,\n    encryptedOrder.response?.toString()\n  );\n\n  const decryptedResponse = await SEA.decrypt(\n    encryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\"),\n    secret\n  );\n\n  const decryptedOrder = {\n    response: decryptedResponse?.replace?.($$__SHOCKWALLET__MSG__, \"\"),\n    type: encryptedOrder.type\n  };\n\n  console.log(\"[ORDER] Decrypted order:\", decryptedOrder);\n\n  if (decryptedOrder.type === \"err\") {\n    throw {\n      field: \"order\",\n      message: \"An error has occurred while retrieving the order\",\n      data: decryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\")\n    };\n  }\n\n  dispatch({\n    type: ACTIONS.LOAD_PAYMENT_REQUEST,\n    data: decryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\")\n  });\n\n  return decryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\");\n};\n\nexport const resetPaymentRequest = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_PAYMENT_REQUEST\n  });\n};\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst Loader = ({ text = \"Loading...\" }) => (\n  <div className=\"loading-wall\">\n    <div className=\"loading-wall-icon\">\n      <span className=\"loading-circle loading-circle-1\"></span>\n      <span className=\"loading-circle loading-circle-2\"></span>\n      <span className=\"loading-circle loading-circle-3\"></span>\n      <span className=\"loading-circle loading-circle-4\"></span>\n      <span className=\"loading-circle loading-circle-5\"></span>\n    </div>\n    <div className=\"loading-wall-text\">{text}</div>\n  </div>\n);\n\nexport default Loader;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 38;","import { Gun, createRandomGunUser, fetchPath } from \"../utils/Gun\";\n\nexport const ACTIONS = {\n  LOAD_GUN_PAIR: \"auth/loadPair\"\n};\n\nexport const generateGunPair = () => async dispatch => {\n  const alias = localStorage.getItem(\"shocknet/gun/alias\");\n  const pass = localStorage.getItem(\"shocknet/gun/pass\");\n  const publicKey = localStorage.getItem(\"shocknet/gun/pub\");\n  const ePublicKey = localStorage.getItem(\"shocknet/gun/epub\");\n\n  if (!alias || !pass) {\n    console.log(\"[Gun] Keypair not found, generating a new one...\");\n\n    const randomUser = await createRandomGunUser();\n    localStorage.setItem(\"shocknet/gun/alias\", randomUser.alias);\n    localStorage.setItem(\"shocknet/gun/pass\", randomUser.pass);\n    localStorage.setItem(\"shocknet/gun/pub\", randomUser.pub);\n\n    const gunPointer = Gun.user(randomUser.pub);\n    const newUserEPublicKey = await fetchPath({\n      path: \"epub\",\n      gunPointer\n    });\n    localStorage.setItem(\"shocknet/gun/epub\", newUserEPublicKey);\n    dispatch({\n      type: ACTIONS.LOAD_GUN_PAIR,\n      data: randomUser\n    });\n    return;\n  }\n\n  console.log(\"[Gun] Keypair exists!\");\n\n  const user = {\n    pub: publicKey,\n    alias: alias,\n    epub: ePublicKey,\n    pass: pass\n  };\n\n  console.log(\"[Gun] User Authenticated\");\n\n  dispatch({\n    type: ACTIONS.LOAD_GUN_PAIR,\n    data: user\n  });\n\n  return user;\n};\n","import React, { Suspense } from \"react\";\nimport { withRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Tooltip from \"react-tooltip\";\nimport Loader from \"./common/Loader\";\nimport \"./styles/App.css\";\n\nconst UserPage = React.lazy(() => import(\"./pages/User\"));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <Route path=\"/user/:userId\" component={UserPage} />\n          <Route path=\"/:userId\" component={UserPage} />\n          <Redirect to=\"/qsgziGQS99sPUxV1CRwwRckn9cG6cJ3prbDsrbL7qko.oRbCaVKwJFQURWrS1pFhkfAzrkEvkQgBRIUz9uoWtrg\" />\n        </Switch>\n      </Suspense>\n      <Tooltip backgroundColor=\"#3a4d67\" effect=\"solid\" />\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","import { ACTIONS } from \"../actions/UserActions\";\n\nconst INITIAL_STATE = {\n  wall: {\n    posts: [],\n    // Specifying -1 is helpful for determining whether or not\n    // the wall was loaded at all\n    page: -1,\n    totalPages: 0\n  },\n  profile: {}\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_USER_WALL: {\n      const { data } = action;\n      return {\n        ...state,\n        wall: {\n          ...state.wall,\n          posts: [...state.wall.posts, ...data.posts],\n          page: data.page\n        }\n      };\n    }\n    case ACTIONS.LOAD_USER_WALL_TOTAL_PAGES: {\n      const { data } = action;\n      console.log(\"Total pages:\", data);\n      return {\n        ...state,\n        wall: {\n          ...state.wall,\n          totalPages: data\n        }\n      };\n    }\n    case ACTIONS.LOAD_USER_DATA: {\n      const { data } = action;\n      return {\n        ...state,\n        profile: data\n      };\n    }\n    case ACTIONS.LOAD_USER_AVATAR: {\n      const { data } = action;\n      return {\n        ...state,\n        profile: {\n          ...state.profile,\n          avatar: data\n        }\n      };\n    }\n    case ACTIONS.UPDATE_USER_PROFILE: {\n      const { data } = action;\n      return {\n        ...state,\n        profile: {\n          ...state.profile,\n          ...data\n        }\n      };\n    }\n    case ACTIONS.UPDATE_WALL_POST: {\n      const { data: updatedPost } = action;\n      return {\n        ...state,\n        wall: {\n          ...state.wall,\n          posts: state.wall.posts.map(post =>\n            updatedPost.postID === post.id\n              ? {\n                  ...post,\n                  ...updatedPost.data\n                }\n              : post\n          )\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_WALL: {\n      return { ...state, wall: INITIAL_STATE.wall };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  pair: {}\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_GUN_PAIR: {\n      const { data } = action;\n      return {\n        ...state,\n        pair: data\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","import { ACTIONS } from \"../actions/TransactionActions\";\n\nconst INITIAL_STATE = {\n  paymentRequest: null\n};\n\nconst transaction = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_PAYMENT_REQUEST: {\n      const { data } = action;\n      return {\n        ...state,\n        paymentRequest: data\n      };\n    }\n    case ACTIONS.RESET_PAYMENT_REQUEST: {\n      return {\n        ...state,\n        paymentRequest: null\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default transaction;\n","import { combineReducers } from \"redux\";\nimport UserReducer from \"./UserReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport TransactionReducer from \"./TransactionReducer\";\n\nconst reducers = combineReducers({\n  user: UserReducer,\n  auth: AuthReducer,\n  transaction: TransactionReducer\n});\n\nexport default reducers;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst store = window.__REDUX_DEVTOOLS_EXTENSION__\n  ? createStore(\n      rootReducer,\n      compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__())\n    )\n  : createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Router basename=\"/\">\n        <App />\n      </Router>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}